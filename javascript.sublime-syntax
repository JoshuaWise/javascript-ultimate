%YAML 1.2
---
{
    "name": "JavaScript Ultimate",
    "file_extensions": [
        "js",
        "htc"
    ],
    "first_line_match": "{{shebang}}",
    "scope": "source.js",
    "variables": {
        "unicode_other_id_start": "\\x{2118}\\x{212E}\\x{309B}\\x{309C}",
        "unicode_other_id_continue": "\\x{1369}\\x{00B7}\\x{0387}\\x{19DA}",
        "unicode_id_start": "\\p{L}\\p{Nl}{{unicode_other_id_start}}",
        "unicode_id_continue": "{{unicode_id_start}}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}{{unicode_other_id_continue}}",
        "ident_start": "{{unicode_id_start}}_$\\\\",
        "ident_part": "{{unicode_id_continue}}\\x{200C}\\x{200D}_$\\\\",
        "space_chars": "\\x{0020}\\x{0009}\\x{000B}\\x{000C}\\x{00A0}\\x{FEFF}\\p{Zs}",
        "line_terminator_chars": "\\x{000a}\\x{000d}\\x{2028}\\x{2029}",
        "keyword": "(?:break|case|catch|class|const|continue|debugger|default|delete|do|else|export|extends|finally|for|function|if|import|in|instanceof|new|return|super|switch|this|throw|try|typeof|var|void|while|with|yield|let|of|static|await)",
        "future_reserved_word": "(?:enum|implements|interface|package|private|protected|public)",
        "hex_escape_sequence": "(?:x\\h{2})",
        "unicode_escape_sequence": "(?:u\\h{4}|u\\{\\h++\\})",
        "common_regexp_escape_sequences": "(?:{{hex_escape_sequence}}|{{unicode_escape_sequence}}|c[a-zA-Z]|0(?![0-9])|[1-9][0-9]*+)",
        "common_regexp_operators": "(?:\\^|\\$|\\\\|\\.|\\*|\\+|\\?|\\(|\\)|\\[|\\]|\\{|\\}|\\||\\/)",
        "space": "[{{space_chars}}]",
        "line_terminator": "(?:\\x{000d}\\x{000a}|[{{line_terminator_chars}}])",
        "non_token": "[{{space_chars}}{{line_terminator_chars}}]++",
        "some_space": "{{space}}++",
        "to_token": "{{space}}*+",
        "token": "[^{{space_chars}}{{line_terminator_chars}}]",
        "b_before": "(?<![{{ident_part}}])",
        "b_after": "(?![{{ident_part}}])",
        "otherwise": "(?=[\\s\\S])",
        "statement_terminator": "(?:;|{{line_terminator}})",
        "ident": "(?:{{b_before}}[{{ident_start}}][{{ident_part}}]*+{{b_after}})",
        "reserved_word": "(?:{{b_before}}(?:{{keyword}}|{{future_reserved_word}}|null|true|false){{b_after}})",
        "statement_keyword": "(?:{{b_before}}(?:import|export|var|let|const|if|with|while|do|for|switch|try|catch|finally|break|continue|case|return|throw|debugger){{b_after}})",
        "statement_keyword_all": "(?:{{statement_keyword}}|{{b_before}}(?:function|class|async|true|false|null|undefined|Infinity|NaN|this|arguments|super|new|yield|typeof|void|delete|await){{b_after}})",
        "shebang": "^#!/usr/bin/env node(?:{{space}}[^{{line_terminator_chars}}]*+)?+(?:{{line_terminator}}|$)",
        "arrow_function_with_parenthesis": "(?:{{b_before}}(async){{to_token}})?+\\((?={{to_token}}(?:(?:{{ident}}(?={{to_token}}[,)=])|\\{|\\[|\\.\\.\\.)[^)]*+)?+\\){{to_token}}=>)",
        "arrow_function_with_reserved_word": "(?:{{b_before}}(async){{some_space}})?+({{reserved_word}})(?={{to_token}}=>)",
        "arrow_function_with_ident": "(?:{{b_before}}(async){{some_space}})?+({{ident}})(?={{to_token}}=>)",
        "assignment_for_function": "(?={{to_token}}={{to_token}}(?:(?:async{{some_space}})?+function\\*?+{{to_token}}\\(|{{arrow_function_with_parenthesis}}|{{arrow_function_with_reserved_word}}|{{arrow_function_with_ident}}))",
        "property_assignment_for_function": "(?={{to_token}}:{{to_token}}(?:(?:async{{some_space}})?+function\\*?+{{to_token}}\\(|{{arrow_function_with_parenthesis}}|{{arrow_function_with_reserved_word}}|{{arrow_function_with_ident}}))"
    },
    "contexts": {
        "prototype": [
            {
                "match": "(//)[^{{line_terminator_chars}}]*+",
                "scope": "comment.line.double-slash.js",
                "captures": {
                    "1": "punctuation.definition.comment.js"
                }
            },
            {
                "match": "/\\*\\*(?!/)",
                "scope": "punctuation.definition.comment.js",
                "push": [
                    {
                        "meta_scope": "comment.block.documentation.js"
                    },
                    {
                        "match": "\\*/",
                        "scope": "punctuation.definition.comment.js",
                        "pop": true
                    },
                    {
                        "match": "^{{to_token}}\\*{{to_token}}(@{{token}}++)",
                        "captures": {
                            "1": "keyword.other.documentation.custom.js"
                        }
                    }
                ]
            },
            {
                "match": "/\\*",
                "scope": "punctuation.definition.comment.js",
                "push": [
                    {
                        "meta_scope": "comment.block.js"
                    },
                    {
                        "match": "\\*/",
                        "scope": "punctuation.definition.comment.js",
                        "pop": true
                    }
                ]
            }
        ],
        "main": [
            {
                "match": "{{shebang}}",
                "scope": "comment.line.shebang.js"
            },
            {
                "match": "{{otherwise}}",
                "push": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "{{otherwise}}",
                        "push": "statement_top_level"
                    }
                ]
            }
        ],
        "otherwise_invalid": [
            {
                "match": "{{token}}",
                "scope": "invalid.illegal.js"
            }
        ],
        "need_closing_parenthesis": [
            {
                "match": "\\)",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "need_comma_or_closing_curly_bracket": [
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "need_opening_parenthesis_ahead_or_comma_or_closing_curly_bracket": [
            {
                "match": "[,}]|(?=\\()",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "block_statement": [
            {
                "match": "\\{",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\}",
                        "pop": true
                    },
                    {
                        "match": "{{otherwise}}",
                        "push": "statement_in_block"
                    }
                ]
            }
        ],
        "_switch_statement_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\}",
                "pop": true
            },
            {
                "match": "{{b_before}}case{{b_after}}",
                "scope": "keyword.control.js",
                "push": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\})",
                        "pop": true
                    },
                    {
                        "match": ":",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "match": "{{otherwise}}",
                        "set": "expression_until_curly_bracket_ahead_or_colon"
                    }
                ]
            },
            {
                "match": "{{b_before}}default{{b_after}}",
                "scope": "keyword.control.js",
                "push": [
                    {
                        "match": ":|(?=\\})",
                        "pop": true
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            },
            {
                "match": "{{otherwise}}",
                "push": "statement_in_block"
            }
        ],
        "_class_block": [
            {
                "include": "method_definition_in_class"
            }
        ],
        "parenthesized_expression": [
            {
                "match": "\\(",
                "set": "expression_until_parenthesis"
            }
        ],
        "string_literal": [
            {
                "match": "(')(use strict)(')|(\")(use strict)(\")",
                "scope": "string.quoted.js",
                "captures": {
                    "1": "punctuation.definition.string.begin.js",
                    "2": "comment.directive.js",
                    "3": "punctuation.definition.string.end.js",
                    "4": "punctuation.definition.string.begin.js",
                    "5": "comment.directive.js",
                    "6": "punctuation.definition.string.end.js"
                },
                "pop": true
            },
            {
                "match": "'",
                "scope": "punctuation.definition.string.begin.js",
                "set": "_string_literal_contents",
                "with_prototype": [
                    {
                        "match": "\""
                    }
                ]
            },
            {
                "match": "\"",
                "scope": "punctuation.definition.string.begin.js",
                "set": "_string_literal_contents",
                "with_prototype": [
                    {
                        "match": "'"
                    }
                ]
            }
        ],
        "_string_literal_contents": [
            {
                "meta_include_prototype": false
            },
            {
                "meta_scope": "string.quoted.js"
            },
            {
                "include": "_string_escape_sequences"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "meta_include_prototype": false
                    },
                    {
                        "meta_scope": "string.quoted.js"
                    },
                    {
                        "include": "_string_escape_sequences"
                    },
                    {
                        "match": "['\"]",
                        "scope": "punctuation.definition.string.end.js invalid.illegal.js",
                        "pop": true
                    }
                ]
            },
            {
                "match": "['\"]",
                "scope": "punctuation.definition.string.end.js",
                "pop": true
            }
        ],
        "_string_escape_sequences": [
            {
                "match": "(\\\\){{line_terminator}}",
                "scope": "constant.character.escape.js",
                "captures": {
                    "1": "linecontinuation.js"
                }
            },
            {
                "match": "\\\\(?:0(?![0-9])|[bfnrtv'\"\\\\]|{{hex_escape_sequence}}|{{unicode_escape_sequence}})",
                "scope": "constant.character.escape.js"
            },
            {
                "match": "\\\\(?:0[0-9]++|[1-9][0-9]*+)?+",
                "scope": "invalid.illegal.js"
            }
        ],
        "template_literal": [
            {
                "match": "`",
                "scope": "punctuation.definition.string.begin.js",
                "set": "_template_literal_contents"
            }
        ],
        "_template_literal_contents": [
            {
                "meta_include_prototype": false
            },
            {
                "meta_scope": "string.quoted.template.js"
            },
            {
                "match": "\\\\[$`]",
                "scope": "constant.character.escape.js"
            },
            {
                "include": "_string_escape_sequences"
            },
            {
                "match": "\\$\\{",
                "scope": "variable.language.js",
                "set": [
                    "_template_literal_contents_continue",
                    "expression_until_end_of_template_interpolation"
                ]
            },
            {
                "match": "`",
                "scope": "punctuation.definition.string.end.js",
                "pop": true
            }
        ],
        "_template_literal_contents_continue": [
            {
                "match": "{{otherwise}}",
                "set": "_template_literal_contents"
            }
        ],
        "regular_expression_literal": [
            {
                "match": "/",
                "scope": "string.regexp.js punctuation.definition.string.begin.js",
                "set": "_regular_expression_literal_contents"
            }
        ],
        "_regular_expression_literal_contents": [
            {
                "meta_include_prototype": false
            },
            {
                "meta_content_scope": "string.regexp.js"
            },
            {
                "match": "\\\\(?:[dDsSwWfnrtvbB]|{{common_regexp_escape_sequences}})",
                "scope": "constant.character.escape.js regexp-operator.js"
            },
            {
                "match": "\\\\{{common_regexp_operators}}",
                "scope": "constant.character.escape.js"
            },
            {
                "match": "\\^|\\$|\\||\\?|\\*|\\+|\\.|\\{[0-9]++(?:,[0-9]*+)?+\\}|\\((?:\\?\\!|\\?=|\\?:)?+|\\)",
                "scope": "regexp-operator.js"
            },
            {
                "match": "\\\\(?:0[0-9]++)?+",
                "scope": "invalid.illegal.js"
            },
            {
                "match": "(\\[\\^?+)-?+",
                "scope": "string.regexp.characterclass.js",
                "captures": {
                    "1": "punctuation.definition.string.begin.js"
                },
                "set": "_regular_expression_literal_class"
            },
            {
                "match": "{{line_terminator}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "/(?:([gimuys]*?(?'option'[gimuys])[gimuys]*?\\k'option')|[gimuys]*)([{{ident_part}}]*+)",
                "scope": "string.regexp.js punctuation.definition.string.end.js",
                "captures": {
                    "1": "invalid.illegal.js",
                    "3": "invalid.illegal.js"
                },
                "pop": true
            }
        ],
        "_regular_expression_literal_class": [
            {
                "meta_include_prototype": false
            },
            {
                "meta_content_scope": "string.regexp.js string.regexp.characterclass.js"
            },
            {
                "match": "\\\\(?:[dDsSwWfnrtvb]|{{common_regexp_escape_sequences}})",
                "scope": "constant.character.escape.js regexp-operator.js"
            },
            {
                "match": "\\\\(?:-|{{common_regexp_operators}})",
                "scope": "constant.character.escape.js"
            },
            {
                "match": "\\\\(?:0[0-9]++|B|c[0-9_])?+",
                "scope": "invalid.illegal.js"
            },
            {
                "match": "(?={{line_terminator}})",
                "pop": true
            },
            {
                "match": "-?+(\\])",
                "captures": {
                    "1": "punctuation.definition.string.end.js"
                },
                "set": "_regular_expression_literal_contents"
            },
            {
                "match": "-",
                "scope": "regexp-operator.js"
            }
        ],
        "numeric_literal": [
            {
                "match": "{{b_before}}0([xXbBoO]n?+){{b_after}}",
                "scope": "constant.numeric.js",
                "captures": {
                    "1": "invalid.illegal.js"
                },
                "pop": true
            },
            {
                "match": "{{b_before}}0[xX]\\h++n?+{{b_after}}",
                "scope": "constant.numeric.hexadecimal.js",
                "pop": true
            },
            {
                "match": "{{b_before}}0[bB][01]++n?+{{b_after}}",
                "scope": "constant.numeric.binary.js",
                "pop": true
            },
            {
                "match": "{{b_before}}0[oO][0-7]++n?+{{b_after}}",
                "scope": "constant.numeric.octal.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:(?:0|[1-9][0-9]*+)n|(?:(?:0|[1-9][0-9]*+)(?:\\.[0-9]*+)?+|\\.[0-9]++)(?:[eE][+-]?+[0-9]++)?+){{b_after}}",
                "scope": "constant.numeric.decimal.js",
                "pop": true
            }
        ],
        "language_constant": [
            {
                "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                "scope": "constant.language.js",
                "pop": true
            }
        ],
        "language_variable": [
            {
                "match": "{{b_before}}(?:this|arguments|super){{b_after}}",
                "scope": "variable.language.js",
                "pop": true
            }
        ],
        "reserved_word_reference": [
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            }
        ],
        "_optional_postfix_operator": [
            {
                "match": "{{to_token}}(--|\\+\\+)",
                "captures": {
                    "1": "keyword.operator.js"
                },
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "array_literal": [
            {
                "match": "\\[",
                "set": "expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "object_literal": [
            {
                "match": "\\{",
                "set": "method_definition_in_object_literal"
            }
        ],
        "_arrow_operator": [
            {
                "match": "=>",
                "scope": "keyword.operator.js",
                "pop": true
            }
        ],
        "destructuring_for_parameter": [
            {
                "include": "object_destructuring_for_parameter"
            },
            {
                "include": "array_destructuring_for_parameter"
            }
        ],
        "destructuring_for_variable": [
            {
                "include": "object_destructuring_for_variable"
            },
            {
                "include": "array_destructuring_for_variable"
            }
        ],
        "import_statement": [
            {
                "match": "{{b_before}}import{{b_after}}",
                "scope": "storage.type.js",
                "set": "_import_statement_core"
            }
        ],
        "_import_all_named": [
            {
                "match": "\\*",
                "scope": "keyword.operator.js",
                "set": "_import_all_named_as"
            }
        ],
        "_import_named_block": [
            {
                "match": "\\{",
                "set": "_import_named_item"
            }
        ],
        "_import_named_item": [
            {
                "match": "\\}",
                "set": "_import_from"
            },
            {
                "match": "({{ident}}){{to_token}}(as){{b_after}}",
                "captures": {
                    "1": "entity.name.property.js",
                    "2": "keyword.operator.js"
                },
                "set": [
                    {
                        "match": "\\}",
                        "set": "_import_from"
                    },
                    {
                        "match": ",",
                        "scope": "invalid.illegal.js",
                        "set": "_import_named_item"
                    },
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_import_named_continue"
                    },
                    {
                        "match": "{{ident}}",
                        "set": "_import_named_continue"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_import_named_continue"
            },
            {
                "match": "{{ident}}",
                "set": "_import_named_continue"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_named_continue": [
            {
                "match": ",",
                "set": "_import_named_item"
            },
            {
                "match": "\\}",
                "set": "_import_from"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "export_statement": [
            {
                "match": "{{b_before}}export{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_export_statement_core"
            }
        ],
        "_export_clause": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "match": "({{reserved_word}}){{to_token}}(as){{b_after}}",
                "captures": {
                    "1": "invalid.illegal.js",
                    "2": "keyword.operator.js"
                },
                "set": "_export_clause_as"
            },
            {
                "match": "{{ident}}{{to_token}}(as){{b_after}}",
                "captures": {
                    "1": "keyword.operator.js"
                },
                "set": "_export_clause_as"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_export_clause_continue"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.property.js",
                "set": "_export_clause_continue"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_export_clause_as": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.property.js",
                "set": "_export_clause_continue"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_export_clause_continue": [
            {
                "match": ",",
                "set": "_export_clause"
            },
            {
                "match": "\\}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "expression_until_parenthesis": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            }
        ],
        "_primary_parts__expression_until_parenthesis": [
            {
                "include": "_arrow_function_expression__expression_until_parenthesis"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_parenthesis"
            },
            {
                "include": "_class_expression__expression_until_parenthesis"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_parenthesis"
            },
            {
                "include": "_prefix_operators__expression_until_parenthesis"
            },
            {
                "include": "_unary_operators__expression_until_parenthesis"
            }
        ],
        "_primary__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_parenthesis"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_parenthesis"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_parenthesis": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_parenthesis"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_parenthesis"
                    }
                ]
            }
        ],
        "_new_target__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_parenthesis",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_parenthesis"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis"
            },
            {
                "include": "_primary__expression_until_parenthesis"
            }
        ],
        "_class_name_deep__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_parenthesis"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_parenthesis": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_parenthesis": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_parenthesis"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_parenthesis"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_parenthesis"
            }
        ],
        "_function_expression__expression_until_parenthesis": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_parenthesis"
            }
        ],
        "_function_expression_name__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_parenthesis"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_parenthesis",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_parenthesis": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_parenthesis"
            }
        ],
        "_class_expression_name__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_parenthesis": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_parenthesis": [
            {
                "include": "_instanceof_keyword__expression_until_parenthesis"
            },
            {
                "include": "_binary_operators__expression_until_parenthesis"
            },
            {
                "include": "_dot_reference__expression_until_parenthesis"
            },
            {
                "include": "_square_bracket_reference__expression_until_parenthesis"
            },
            {
                "include": "_function_invocation__expression_until_parenthesis"
            },
            {
                "include": "_template_literal__expression_until_parenthesis"
            },
            {
                "include": "_conditional_expression__expression_until_parenthesis"
            }
        ],
        "_secondary__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_parenthesis"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_parenthesis": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_class_name_shallow__expression_until_parenthesis"
                ]
            }
        ],
        "_binary_operators__expression_until_parenthesis": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis"
                ]
            }
        ],
        "_dot_reference__expression_until_parenthesis": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_parenthesis"
            }
        ],
        "_dot_reference_contents__expression_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_parenthesis": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_parenthesis": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_parenthesis": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_parenthesis": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_parenthesis",
                    "_primary__expression_until_parenthesis",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_square_bracket": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            }
        ],
        "_primary_parts__expression_until_square_bracket": [
            {
                "include": "_arrow_function_expression__expression_until_square_bracket"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_square_bracket"
            },
            {
                "include": "_class_expression__expression_until_square_bracket"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_square_bracket"
            },
            {
                "include": "_prefix_operators__expression_until_square_bracket"
            },
            {
                "include": "_unary_operators__expression_until_square_bracket"
            }
        ],
        "_primary__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_square_bracket"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_square_bracket"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_square_bracket": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_square_bracket"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_square_bracket"
                    }
                ]
            }
        ],
        "_new_target__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_square_bracket",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_square_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket"
            },
            {
                "include": "_primary__expression_until_square_bracket"
            }
        ],
        "_class_name_deep__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_square_bracket"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_square_bracket": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_square_bracket": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_square_bracket"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_square_bracket"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_square_bracket"
            }
        ],
        "_function_expression__expression_until_square_bracket": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_square_bracket"
            }
        ],
        "_function_expression_name__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_square_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_square_bracket",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_square_bracket": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_square_bracket"
            }
        ],
        "_class_expression_name__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_square_bracket": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_square_bracket": [
            {
                "include": "_instanceof_keyword__expression_until_square_bracket"
            },
            {
                "include": "_binary_operators__expression_until_square_bracket"
            },
            {
                "include": "_dot_reference__expression_until_square_bracket"
            },
            {
                "include": "_square_bracket_reference__expression_until_square_bracket"
            },
            {
                "include": "_function_invocation__expression_until_square_bracket"
            },
            {
                "include": "_template_literal__expression_until_square_bracket"
            },
            {
                "include": "_conditional_expression__expression_until_square_bracket"
            }
        ],
        "_secondary__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_square_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_square_bracket": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_class_name_shallow__expression_until_square_bracket"
                ]
            }
        ],
        "_binary_operators__expression_until_square_bracket": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket"
                ]
            }
        ],
        "_dot_reference__expression_until_square_bracket": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_square_bracket"
            }
        ],
        "_dot_reference_contents__expression_until_square_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_square_bracket": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_square_bracket": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_square_bracket": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_square_bracket": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_square_bracket",
                    "_primary__expression_until_square_bracket",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_colon": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            }
        ],
        "_primary_parts__expression_until_colon": [
            {
                "include": "_arrow_function_expression__expression_until_colon"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_colon"
            },
            {
                "include": "_class_expression__expression_until_colon"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_colon"
            },
            {
                "include": "_prefix_operators__expression_until_colon"
            },
            {
                "include": "_unary_operators__expression_until_colon"
            }
        ],
        "_primary__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_colon"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_colon"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_colon": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_colon"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_colon"
                    }
                ]
            }
        ],
        "_new_target__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_colon",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_colon"
            },
            {
                "include": "_primary__expression_until_colon"
            }
        ],
        "_class_name_deep__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_colon"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_colon": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_colon": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_colon"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_colon"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_colon"
            }
        ],
        "_function_expression__expression_until_colon": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_colon"
            }
        ],
        "_function_expression_name__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_colon"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_colon",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_colon": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_colon"
            }
        ],
        "_class_expression_name__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_colon"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_colon"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_colon"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_colon"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:)",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_colon": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_colon",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_colon",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_colon",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_colon": [
            {
                "include": "_instanceof_keyword__expression_until_colon"
            },
            {
                "include": "_binary_operators__expression_until_colon"
            },
            {
                "include": "_dot_reference__expression_until_colon"
            },
            {
                "include": "_square_bracket_reference__expression_until_colon"
            },
            {
                "include": "_function_invocation__expression_until_colon"
            },
            {
                "include": "_template_literal__expression_until_colon"
            },
            {
                "include": "_conditional_expression__expression_until_colon"
            }
        ],
        "_secondary__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ":",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_colon": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_class_name_shallow__expression_until_colon"
                ]
            }
        ],
        "_binary_operators__expression_until_colon": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon"
                ]
            }
        ],
        "_dot_reference__expression_until_colon": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_colon"
            }
        ],
        "_dot_reference_contents__expression_until_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ":",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_colon": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_colon",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_colon": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_colon",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_colon": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_colon",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_colon": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_colon",
                    "_primary__expression_until_colon",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            }
        ],
        "_primary_parts__expression_until_curly_bracket_ahead_or_colon": [
            {
                "include": "_arrow_function_expression__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_class_expression__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_prefix_operators__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_unary_operators__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_primary__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_curly_bracket_ahead_or_colon"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_curly_bracket_ahead_or_colon"
                    }
                ]
            }
        ],
        "_new_target__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_curly_bracket_ahead_or_colon",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_primary__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_class_name_deep__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=:|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_curly_bracket_ahead_or_colon"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_function_expression__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_function_expression_name__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_curly_bracket_ahead_or_colon",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_class_expression_name__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=:|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_or_colon",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_or_colon",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_or_colon",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_curly_bracket_ahead_or_colon": [
            {
                "include": "_instanceof_keyword__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_binary_operators__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_dot_reference__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_square_bracket_reference__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_function_invocation__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_template_literal__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "_conditional_expression__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_secondary__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ":|(?=\\})",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_curly_bracket_ahead_or_colon"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_class_name_shallow__expression_until_curly_bracket_ahead_or_colon"
                ]
            }
        ],
        "_binary_operators__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon"
                ]
            }
        ],
        "_dot_reference__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_curly_bracket_ahead_or_colon"
            }
        ],
        "_dot_reference_contents__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ":|(?=\\})",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_curly_bracket_ahead_or_colon": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_or_colon",
                    "_primary__expression_until_curly_bracket_ahead_or_colon",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_end_of_template_interpolation": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            }
        ],
        "_primary_parts__expression_until_end_of_template_interpolation": [
            {
                "include": "_arrow_function_expression__expression_until_end_of_template_interpolation"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_class_expression__expression_until_end_of_template_interpolation"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_prefix_operators__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_unary_operators__expression_until_end_of_template_interpolation"
            }
        ],
        "_primary__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_end_of_template_interpolation"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_end_of_template_interpolation"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_end_of_template_interpolation": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\})",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_end_of_template_interpolation"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_end_of_template_interpolation"
                    }
                ]
            }
        ],
        "_new_target__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_end_of_template_interpolation",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_primary__expression_until_end_of_template_interpolation"
            }
        ],
        "_class_name_deep__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_end_of_template_interpolation"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_end_of_template_interpolation"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_end_of_template_interpolation": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\})",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_end_of_template_interpolation": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\})",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_end_of_template_interpolation"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_end_of_template_interpolation"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_end_of_template_interpolation"
            }
        ],
        "_function_expression__expression_until_end_of_template_interpolation": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_end_of_template_interpolation"
            }
        ],
        "_function_expression_name__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_end_of_template_interpolation"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_end_of_template_interpolation"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_end_of_template_interpolation",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_end_of_template_interpolation": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_end_of_template_interpolation"
            }
        ],
        "_class_expression_name__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_end_of_template_interpolation"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_end_of_template_interpolation"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_end_of_template_interpolation"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_end_of_template_interpolation": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_end_of_template_interpolation",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_end_of_template_interpolation",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_end_of_template_interpolation",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_end_of_template_interpolation": [
            {
                "include": "_instanceof_keyword__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_binary_operators__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_dot_reference__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_square_bracket_reference__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_function_invocation__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_template_literal__expression_until_end_of_template_interpolation"
            },
            {
                "include": "_conditional_expression__expression_until_end_of_template_interpolation"
            }
        ],
        "_secondary__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\}",
                "pop": true,
                "scope": "string.quoted.template.js variable.language.js"
            },
            {
                "include": "_secondary_parts__expression_until_end_of_template_interpolation"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_end_of_template_interpolation": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_class_name_shallow__expression_until_end_of_template_interpolation"
                ]
            }
        ],
        "_binary_operators__expression_until_end_of_template_interpolation": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation"
                ]
            }
        ],
        "_dot_reference__expression_until_end_of_template_interpolation": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_end_of_template_interpolation"
            }
        ],
        "_dot_reference_contents__expression_until_end_of_template_interpolation": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\}",
                "pop": true,
                "scope": "string.quoted.template.js variable.language.js"
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_end_of_template_interpolation": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_end_of_template_interpolation": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_end_of_template_interpolation": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_end_of_template_interpolation": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_end_of_template_interpolation",
                    "_primary__expression_until_end_of_template_interpolation",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_comma_or_curly_bracket": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            }
        ],
        "_primary_parts__expression_until_comma_or_curly_bracket": [
            {
                "include": "_arrow_function_expression__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_class_expression__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_prefix_operators__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_unary_operators__expression_until_comma_or_curly_bracket"
            }
        ],
        "_primary__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=[,}])",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_comma_or_curly_bracket"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_comma_or_curly_bracket"
                    }
                ]
            }
        ],
        "_new_target__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_comma_or_curly_bracket",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_primary__expression_until_comma_or_curly_bracket"
            }
        ],
        "_class_name_deep__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_comma_or_curly_bracket": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=[,}])",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=[,}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_comma_or_curly_bracket"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_comma_or_curly_bracket"
            }
        ],
        "_function_expression__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_comma_or_curly_bracket"
            }
        ],
        "_function_expression_name__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_comma_or_curly_bracket",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_comma_or_curly_bracket"
            }
        ],
        "_class_expression_name__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_comma_or_curly_bracket"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_curly_bracket",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_curly_bracket",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_curly_bracket",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_comma_or_curly_bracket": [
            {
                "include": "_instanceof_keyword__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_binary_operators__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_dot_reference__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_square_bracket_reference__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_function_invocation__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_template_literal__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "_conditional_expression__expression_until_comma_or_curly_bracket"
            }
        ],
        "_secondary__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_comma_or_curly_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_class_name_shallow__expression_until_comma_or_curly_bracket"
                ]
            }
        ],
        "_binary_operators__expression_until_comma_or_curly_bracket": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket"
                ]
            }
        ],
        "_dot_reference__expression_until_comma_or_curly_bracket": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_comma_or_curly_bracket"
            }
        ],
        "_dot_reference_contents__expression_until_comma_or_curly_bracket": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_comma_or_curly_bracket": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_comma_or_curly_bracket": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_comma_or_curly_bracket": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_comma_or_curly_bracket": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_comma_or_curly_bracket",
                    "_primary__expression_until_comma_or_curly_bracket",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            }
        ],
        "_primary_parts__expression_until_comma_or_square_bracket_ahead": [
            {
                "include": "_arrow_function_expression__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_class_expression__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_prefix_operators__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_unary_operators__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_primary__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,\\]]))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_comma_or_square_bracket_ahead"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_comma_or_square_bracket_ahead"
                    }
                ]
            }
        ],
        "_new_target__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_comma_or_square_bracket_ahead",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_primary__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_class_name_deep__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,\\]]))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,\\]]))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_comma_or_square_bracket_ahead"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_function_expression__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_function_expression_name__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_comma_or_square_bracket_ahead",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_class_expression_name__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,\\]]))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_square_bracket_ahead",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_square_bracket_ahead",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_comma_or_square_bracket_ahead",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_comma_or_square_bracket_ahead": [
            {
                "include": "_instanceof_keyword__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_binary_operators__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_dot_reference__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_square_bracket_reference__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_function_invocation__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_template_literal__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "_conditional_expression__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_secondary__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,\\]])",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_comma_or_square_bracket_ahead"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_class_name_shallow__expression_until_comma_or_square_bracket_ahead"
                ]
            }
        ],
        "_binary_operators__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead"
                ]
            }
        ],
        "_dot_reference__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_comma_or_square_bracket_ahead"
            }
        ],
        "_dot_reference_contents__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,\\]])",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_comma_or_square_bracket_ahead": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_comma_or_square_bracket_ahead",
                    "_primary__expression_until_comma_or_square_bracket_ahead",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            }
        ],
        "_primary_parts__expression_until_parenthesis_ahead_or_comma": [
            {
                "include": "_arrow_function_expression__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_class_expression__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_prefix_operators__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_unary_operators__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_primary__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\))|,)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_parenthesis_ahead_or_comma"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_parenthesis_ahead_or_comma"
                    }
                ]
            }
        ],
        "_new_target__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_parenthesis_ahead_or_comma",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_primary__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_class_name_deep__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\))|,)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\))|,)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_parenthesis_ahead_or_comma"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_function_expression__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_function_expression_name__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_parenthesis_ahead_or_comma",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_class_expression_name__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\))|,)",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_or_comma",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_or_comma",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_or_comma",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_parenthesis_ahead_or_comma": [
            {
                "include": "_instanceof_keyword__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_binary_operators__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_dot_reference__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_square_bracket_reference__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_function_invocation__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_template_literal__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "_conditional_expression__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_secondary__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))|,",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_parenthesis_ahead_or_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_class_name_shallow__expression_until_parenthesis_ahead_or_comma"
                ]
            }
        ],
        "_binary_operators__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma"
                ]
            }
        ],
        "_dot_reference__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_parenthesis_ahead_or_comma"
            }
        ],
        "_dot_reference_contents__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))|,",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_parenthesis_ahead_or_comma": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_or_comma",
                    "_primary__expression_until_parenthesis_ahead_or_comma",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_parameter_binding_list": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            }
        ],
        "_primary_parts__expression_until_parameter_binding_list": [
            {
                "include": "_arrow_function_expression__expression_until_parameter_binding_list"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_parameter_binding_list"
            },
            {
                "include": "_class_expression__expression_until_parameter_binding_list"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_parameter_binding_list"
            },
            {
                "include": "_prefix_operators__expression_until_parameter_binding_list"
            },
            {
                "include": "_unary_operators__expression_until_parameter_binding_list"
            }
        ],
        "_primary__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_parameter_binding_list"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_parameter_binding_list"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_parameter_binding_list": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_parameter_binding_list"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_parameter_binding_list"
                    }
                ]
            }
        ],
        "_new_target__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_parameter_binding_list",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_parameter_binding_list"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parameter_binding_list"
            },
            {
                "include": "_primary__expression_until_parameter_binding_list"
            }
        ],
        "_class_name_deep__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_parameter_binding_list"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parameter_binding_list"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_parameter_binding_list": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_parameter_binding_list": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_parameter_binding_list"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_parameter_binding_list"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_parameter_binding_list"
            }
        ],
        "_function_expression__expression_until_parameter_binding_list": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_parameter_binding_list"
            }
        ],
        "_function_expression_name__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_parameter_binding_list"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_parameter_binding_list"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_parameter_binding_list"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_parameter_binding_list",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_parameter_binding_list": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_parameter_binding_list"
            }
        ],
        "_class_expression_name__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parameter_binding_list"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parameter_binding_list"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parameter_binding_list"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parameter_binding_list"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_parameter_binding_list"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_parameter_binding_list"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_parameter_binding_list": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parameter_binding_list",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parameter_binding_list",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parameter_binding_list",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_parameter_binding_list": [
            {
                "include": "_instanceof_keyword__expression_until_parameter_binding_list"
            },
            {
                "include": "_binary_operators__expression_until_parameter_binding_list"
            },
            {
                "include": "_dot_reference__expression_until_parameter_binding_list"
            },
            {
                "include": "_square_bracket_reference__expression_until_parameter_binding_list"
            },
            {
                "include": "_function_invocation__expression_until_parameter_binding_list"
            },
            {
                "include": "_template_literal__expression_until_parameter_binding_list"
            },
            {
                "include": "_conditional_expression__expression_until_parameter_binding_list"
            }
        ],
        "_secondary__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_parameter_binding_list"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_parameter_binding_list": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_class_name_shallow__expression_until_parameter_binding_list"
                ]
            }
        ],
        "_binary_operators__expression_until_parameter_binding_list": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list"
                ]
            }
        ],
        "_dot_reference__expression_until_parameter_binding_list": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_parameter_binding_list"
            }
        ],
        "_dot_reference_contents__expression_until_parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_parameter_binding_list": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_parameter_binding_list": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_parameter_binding_list": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_parameter_binding_list": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_parameter_binding_list",
                    "_primary__expression_until_parameter_binding_list",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            }
        ],
        "_primary_parts__expression_until_parenthesis_ahead_no_comma": [
            {
                "include": "_arrow_function_expression__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_class_expression__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_prefix_operators__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_unary_operators__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_primary__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_parenthesis_ahead_no_comma"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_parenthesis_ahead_no_comma"
                    }
                ]
            }
        ],
        "_new_target__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_parenthesis_ahead_no_comma",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_primary__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_class_name_deep__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_parenthesis_ahead_no_comma"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_function_expression__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_function_expression_name__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_parenthesis_ahead_no_comma",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_class_expression_name__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_no_comma",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_no_comma",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_ahead_no_comma",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_parenthesis_ahead_no_comma": [
            {
                "include": "_instanceof_keyword__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_binary_operators__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_dot_reference__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_square_bracket_reference__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_function_invocation__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_template_literal__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "_conditional_expression__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_secondary__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js"
            },
            {
                "include": "_secondary_parts__expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_class_name_shallow__expression_until_parenthesis_ahead_no_comma"
                ]
            }
        ],
        "_binary_operators__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma"
                ]
            }
        ],
        "_dot_reference__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_parenthesis_ahead_no_comma"
            }
        ],
        "_dot_reference_contents__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_parenthesis_ahead_no_comma": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_parenthesis_ahead_no_comma",
                    "_primary__expression_until_parenthesis_ahead_no_comma",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "push": "expression_until_parenthesis_ahead_or_comma"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_primary_parts__expression_until_parenthesis_with_spread_anywhere": [
            {
                "include": "_arrow_function_expression__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_class_expression__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_prefix_operators__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_unary_operators__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_primary__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_parenthesis_with_spread_anywhere"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_parenthesis_with_spread_anywhere"
                    }
                ]
            }
        ],
        "_new_target__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_parenthesis_with_spread_anywhere",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_primary__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_class_name_deep__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_parenthesis_with_spread_anywhere"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_function_expression__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_function_expression_name__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_parenthesis_with_spread_anywhere",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_class_expression_name__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_with_spread_anywhere",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_with_spread_anywhere",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_parenthesis_with_spread_anywhere",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_parenthesis_with_spread_anywhere": [
            {
                "include": "_instanceof_keyword__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_binary_operators__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_dot_reference__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_square_bracket_reference__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_function_invocation__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_template_literal__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_conditional_expression__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_secondary__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "match": ",",
                "set": "expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "_secondary_parts__expression_until_parenthesis_with_spread_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_class_name_shallow__expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_binary_operators__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_dot_reference__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_parenthesis_with_spread_anywhere"
            }
        ],
        "_dot_reference_contents__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_parenthesis_with_spread_anywhere": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_parenthesis_with_spread_anywhere",
                    "_primary__expression_until_parenthesis_with_spread_anywhere",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": ",++"
            },
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "push": "expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            }
        ],
        "_primary_parts__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "include": "_arrow_function_expression__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_class_expression__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_prefix_operators__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_unary_operators__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_square_bracket_with_spread_or_comma_anywhere"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_square_bracket_with_spread_or_comma_anywhere"
                    }
                ]
            }
        ],
        "_new_target__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_class_name_deep__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=\\])",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_function_expression__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_function_expression_name__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_class_expression_name__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "include": "_instanceof_keyword__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_binary_operators__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_dot_reference__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_square_bracket_reference__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_function_invocation__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_template_literal__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_conditional_expression__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "match": "(?=,)",
                "set": "expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "_secondary_parts__expression_until_square_bracket_with_spread_or_comma_anywhere"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_class_name_shallow__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            }
        ],
        "_binary_operators__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere"
                ]
            }
        ],
        "_dot_reference__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_square_bracket_with_spread_or_comma_anywhere"
            }
        ],
        "_dot_reference_contents__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_square_bracket_with_spread_or_comma_anywhere": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "_primary__expression_until_square_bracket_with_spread_or_comma_anywhere",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            }
        ],
        "_primary_parts__expression_until_square_bracket_ahead_no_comma": [
            {
                "include": "_arrow_function_expression__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_class_expression__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_prefix_operators__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_unary_operators__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_primary__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\]))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_square_bracket_ahead_no_comma"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_square_bracket_ahead_no_comma"
                    }
                ]
            }
        ],
        "_new_target__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_square_bracket_ahead_no_comma",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_primary__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_class_name_deep__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\]))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\]))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_square_bracket_ahead_no_comma"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_function_expression__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_function_expression_name__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_square_bracket_ahead_no_comma",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_class_expression_name__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_ahead_no_comma",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_ahead_no_comma",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_square_bracket_ahead_no_comma",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_square_bracket_ahead_no_comma": [
            {
                "include": "_instanceof_keyword__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_binary_operators__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_dot_reference__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_square_bracket_reference__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_function_invocation__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_template_literal__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "_conditional_expression__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_secondary__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js"
            },
            {
                "include": "_secondary_parts__expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_class_name_shallow__expression_until_square_bracket_ahead_no_comma"
                ]
            }
        ],
        "_binary_operators__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma"
                ]
            }
        ],
        "_dot_reference__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_square_bracket_ahead_no_comma"
            }
        ],
        "_dot_reference_contents__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_square_bracket_ahead_no_comma": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_square_bracket_ahead_no_comma",
                    "_primary__expression_until_square_bracket_ahead_no_comma",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            }
        ],
        "_primary_parts__expression_until_curly_bracket_ahead_no_comma": [
            {
                "include": "_arrow_function_expression__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_class_expression__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_prefix_operators__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_unary_operators__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_primary__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_curly_bracket_ahead_no_comma"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_curly_bracket_ahead_no_comma"
                    }
                ]
            }
        ],
        "_new_target__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_curly_bracket_ahead_no_comma",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_primary__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_class_name_deep__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_curly_bracket_ahead_no_comma"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_function_expression__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_function_expression_name__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_curly_bracket_ahead_no_comma",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_class_expression_name__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=\\}))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_no_comma",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_no_comma",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_curly_bracket_ahead_no_comma",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_curly_bracket_ahead_no_comma": [
            {
                "include": "_instanceof_keyword__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_binary_operators__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_dot_reference__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_square_bracket_reference__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_function_invocation__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_template_literal__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "_conditional_expression__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_secondary__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js"
            },
            {
                "include": "_secondary_parts__expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_class_name_shallow__expression_until_curly_bracket_ahead_no_comma"
                ]
            }
        ],
        "_binary_operators__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma"
                ]
            }
        ],
        "_dot_reference__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_curly_bracket_ahead_no_comma"
            }
        ],
        "_dot_reference_contents__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_curly_bracket_ahead_no_comma": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_curly_bracket_ahead_no_comma",
                    "_primary__expression_until_curly_bracket_ahead_no_comma",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_for_statement_third_section": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            }
        ],
        "_primary_parts__expression_until_for_statement_third_section": [
            {
                "include": "_arrow_function_expression__expression_until_for_statement_third_section"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_for_statement_third_section"
            },
            {
                "include": "_class_expression__expression_until_for_statement_third_section"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_for_statement_third_section"
            },
            {
                "include": "_prefix_operators__expression_until_for_statement_third_section"
            },
            {
                "include": "_unary_operators__expression_until_for_statement_third_section"
            }
        ],
        "_primary__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "include": "_primary_parts__expression_until_for_statement_third_section"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_for_statement_third_section"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_for_statement_third_section": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_for_statement_third_section"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_for_statement_third_section"
                    }
                ]
            }
        ],
        "_new_target__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_for_statement_third_section",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_for_statement_third_section"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_for_statement_third_section"
            },
            {
                "include": "_primary__expression_until_for_statement_third_section"
            }
        ],
        "_class_name_deep__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_for_statement_third_section"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_for_statement_third_section"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_for_statement_third_section": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_for_statement_third_section": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\)))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_for_statement_third_section"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_for_statement_third_section"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_for_statement_third_section"
            }
        ],
        "_function_expression__expression_until_for_statement_third_section": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_for_statement_third_section"
            }
        ],
        "_function_expression_name__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_for_statement_third_section"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_for_statement_third_section"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_for_statement_third_section"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_for_statement_third_section",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_for_statement_third_section": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_for_statement_third_section"
            }
        ],
        "_class_expression_name__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_for_statement_third_section"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_for_statement_third_section"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_for_statement_third_section"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_for_statement_third_section"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_for_statement_third_section"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_for_statement_third_section"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\)))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_for_statement_third_section": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_statement_third_section",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_statement_third_section",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_statement_third_section",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_for_statement_third_section": [
            {
                "include": "_instanceof_keyword__expression_until_for_statement_third_section"
            },
            {
                "include": "_binary_operators__expression_until_for_statement_third_section"
            },
            {
                "include": "_dot_reference__expression_until_for_statement_third_section"
            },
            {
                "include": "_square_bracket_reference__expression_until_for_statement_third_section"
            },
            {
                "include": "_function_invocation__expression_until_for_statement_third_section"
            },
            {
                "include": "_template_literal__expression_until_for_statement_third_section"
            },
            {
                "include": "_conditional_expression__expression_until_for_statement_third_section"
            }
        ],
        "_secondary__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\))",
                "pop": true
            },
            {
                "include": "_secondary_parts__expression_until_for_statement_third_section"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_for_statement_third_section": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_class_name_shallow__expression_until_for_statement_third_section"
                ]
            }
        ],
        "_binary_operators__expression_until_for_statement_third_section": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section"
                ]
            }
        ],
        "_dot_reference__expression_until_for_statement_third_section": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_for_statement_third_section"
            }
        ],
        "_dot_reference_contents__expression_until_for_statement_third_section": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\))",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_for_statement_third_section": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_for_statement_third_section": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_for_statement_third_section": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_for_statement_third_section": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_for_statement_third_section",
                    "_primary__expression_until_for_statement_third_section",
                    "expression_until_colon"
                ]
            }
        ],
        "expression_until_for_binding": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            }
        ],
        "_primary_parts__expression_until_for_binding": [
            {
                "include": "_arrow_function_expression__expression_until_for_binding"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression__expression_until_for_binding"
            },
            {
                "include": "_class_expression__expression_until_for_binding"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword__expression_until_for_binding"
            },
            {
                "include": "_prefix_operators__expression_until_for_binding"
            },
            {
                "include": "_unary_operators__expression_until_for_binding"
            }
        ],
        "_primary__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "invalid.illegal.js"
            },
            {
                "include": "_primary_parts__expression_until_for_binding"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "invalid.illegal.js"
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts__expression_until_for_binding"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword__expression_until_for_binding": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,;)]))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target__expression_until_for_binding"
                    },
                    {
                        "include": "_class_name_shallow__expression_until_for_binding"
                    }
                ]
            }
        ],
        "_new_target__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep__expression_until_for_binding",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep__expression_until_for_binding"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_for_binding"
            },
            {
                "include": "_primary__expression_until_for_binding"
            }
        ],
        "_class_name_deep__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference__expression_until_for_binding"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep__expression_until_for_binding"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators__expression_until_for_binding": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,;)]))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators__expression_until_for_binding": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[,;)]))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary__expression_until_for_binding"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary__expression_until_for_binding"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary__expression_until_for_binding"
            }
        ],
        "_function_expression__expression_until_for_binding": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name__expression_until_for_binding"
            }
        ],
        "_function_expression_name__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis__expression_until_for_binding"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis__expression_until_for_binding"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis__expression_until_for_binding"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket__expression_until_for_binding",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression__expression_until_for_binding": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name__expression_until_for_binding"
            }
        ],
        "_class_expression_name__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_for_binding"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_for_binding"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends__expression_until_for_binding"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance__expression_until_for_binding"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket__expression_until_for_binding"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket__expression_until_for_binding"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression__expression_until_for_binding": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_binding",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_binding",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement__expression_until_for_binding",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts__expression_until_for_binding": [
            {
                "include": "_instanceof_keyword__expression_until_for_binding"
            },
            {
                "include": "_binary_operators__expression_until_for_binding"
            },
            {
                "include": "_dot_reference__expression_until_for_binding"
            },
            {
                "include": "_square_bracket_reference__expression_until_for_binding"
            },
            {
                "include": "_function_invocation__expression_until_for_binding"
            },
            {
                "include": "_template_literal__expression_until_for_binding"
            },
            {
                "include": "_conditional_expression__expression_until_for_binding"
            }
        ],
        "_secondary__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,;)])",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "invalid.illegal.js"
            },
            {
                "include": "_secondary_parts__expression_until_for_binding"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword__expression_until_for_binding": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_class_name_shallow__expression_until_for_binding"
                ]
            }
        ],
        "_binary_operators__expression_until_for_binding": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding"
                ]
            }
        ],
        "_dot_reference__expression_until_for_binding": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents__expression_until_for_binding"
            }
        ],
        "_dot_reference_contents__expression_until_for_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[,;)])",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference__expression_until_for_binding": [
            {
                "match": "\\[",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation__expression_until_for_binding": [
            {
                "match": "\\(",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal__expression_until_for_binding": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression__expression_until_for_binding": [
            {
                "match": "\\?",
                "set": [
                    "_secondary__expression_until_for_binding",
                    "_primary__expression_until_for_binding",
                    "expression_until_colon"
                ]
            }
        ],
        "_for_statement_first_expression": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            }
        ],
        "_primary_parts___for_statement_first_expression": [
            {
                "include": "_arrow_function_expression___for_statement_first_expression"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___for_statement_first_expression"
            },
            {
                "include": "_class_expression___for_statement_first_expression"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___for_statement_first_expression"
            },
            {
                "include": "_prefix_operators___for_statement_first_expression"
            },
            {
                "include": "_unary_operators___for_statement_first_expression"
            }
        ],
        "_primary___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "include": "_primary_parts___for_statement_first_expression"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___for_statement_first_expression"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___for_statement_first_expression": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___for_statement_first_expression"
                    },
                    {
                        "include": "_class_name_shallow___for_statement_first_expression"
                    }
                ]
            }
        ],
        "_new_target___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___for_statement_first_expression",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___for_statement_first_expression"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___for_statement_first_expression"
            },
            {
                "include": "_primary___for_statement_first_expression"
            }
        ],
        "_class_name_deep___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___for_statement_first_expression"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___for_statement_first_expression"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___for_statement_first_expression": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___for_statement_first_expression": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___for_statement_first_expression"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___for_statement_first_expression"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___for_statement_first_expression"
            }
        ],
        "_function_expression___for_statement_first_expression": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___for_statement_first_expression"
            }
        ],
        "_function_expression_name___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___for_statement_first_expression"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___for_statement_first_expression"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___for_statement_first_expression"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___for_statement_first_expression",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___for_statement_first_expression": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___for_statement_first_expression"
            }
        ],
        "_class_expression_name___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___for_statement_first_expression"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___for_statement_first_expression"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___for_statement_first_expression"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___for_statement_first_expression"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___for_statement_first_expression"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___for_statement_first_expression"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___for_statement_first_expression": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___for_statement_first_expression",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___for_statement_first_expression",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___for_statement_first_expression",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___for_statement_first_expression": [
            {
                "include": "_instanceof_keyword___for_statement_first_expression"
            },
            {
                "include": "_binary_operators___for_statement_first_expression"
            },
            {
                "include": "_dot_reference___for_statement_first_expression"
            },
            {
                "include": "_square_bracket_reference___for_statement_first_expression"
            },
            {
                "include": "_function_invocation___for_statement_first_expression"
            },
            {
                "include": "_template_literal___for_statement_first_expression"
            },
            {
                "include": "_conditional_expression___for_statement_first_expression"
            }
        ],
        "_secondary___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[;)]|{{b_before}}(?:of|in){{b_after}})",
                "pop": true
            },
            {
                "include": "_secondary_parts___for_statement_first_expression"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___for_statement_first_expression": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_class_name_shallow___for_statement_first_expression"
                ]
            }
        ],
        "_binary_operators___for_statement_first_expression": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression"
                ]
            }
        ],
        "_dot_reference___for_statement_first_expression": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___for_statement_first_expression"
            }
        ],
        "_dot_reference_contents___for_statement_first_expression": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[;)]|{{b_before}}(?:of|in){{b_after}})",
                "pop": true
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___for_statement_first_expression": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___for_statement_first_expression": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___for_statement_first_expression": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___for_statement_first_expression": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___for_statement_first_expression",
                    "_primary___for_statement_first_expression",
                    "expression_until_colon"
                ]
            }
        ],
        "destructuring_spread_for_parameter_binding_list": [
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": [
                    "_end__destructuring_spread_for_parameter_binding_list",
                    "_identifier__destructuring_spread_for_parameter_binding_list"
                ]
            }
        ],
        "_identifier__destructuring_spread_for_parameter_binding_list": [
            {
                "match": "(?=(?=\\)))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_end__destructuring_spread_for_parameter_binding_list": [
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_parenthesis_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "parameter_binding_until_parenthesis": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after__parameter_binding_until_parenthesis",
                    "__parameter_binding_until_parenthesis"
                ]
            }
        ],
        "__parameter_binding_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after__parameter_binding_until_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "parameter_binding_until_parenthesis_with_initializer": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after__parameter_binding_until_parenthesis_with_initializer",
                    "__parameter_binding_until_parenthesis_with_initializer"
                ]
            }
        ],
        "__parameter_binding_until_parenthesis_with_initializer": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after__parameter_binding_until_parenthesis_with_initializer": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_parenthesis_ahead_no_comma"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "parameter_binding_list": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after__parameter_binding_list",
                    "__parameter_binding_list"
                ]
            }
        ],
        "__parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "include": "destructuring_spread_for_parameter_binding_list"
            },
            {
                "match": "(?=\\))",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after__parameter_binding_list": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ",",
                "set": "parameter_binding_list"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_parameter_binding_list"
            },
            {
                "match": "\\)",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "variable_binding_for_for_statement": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after__variable_binding_for_for_statement",
                    "__variable_binding_for_for_statement"
                ]
            }
        ],
        "__variable_binding_for_for_statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=(?=[,;)]|{{b_before}}(?:of|in){{b_after}}))",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after__variable_binding_for_for_statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?==)",
                "scope": "keyword.operator.js",
                "pop": true
            },
            {
                "match": "(?=[,;)]|{{b_before}}(?:of|in){{b_after}})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "variable_binding": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after__variable_binding",
                    "__variable_binding"
                ]
            }
        ],
        "__variable_binding": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=[^\\s\\S])",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after__variable_binding": [
            {
                "match": "{{otherwise}}",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": "[^\\s\\S]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "property_name_for_method": [
            {
                "match": "{{ident}}(?={{to_token}}(?:))",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "\\[",
                "set": "expression_until_square_bracket"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "string_literal"
            }
        ],
        "property_name_requires_parenthesis_for_method": [
            {
                "match": "{{ident}}(?={{to_token}}(?:\\())",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "\\[",
                "set": "expression_until_square_bracket"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "string_literal"
            }
        ],
        "property_name_requires_colon": [
            {
                "match": "{{ident}}(?={{to_token}}(?::))",
                "scope": "entity.name.property.js",
                "pop": true
            },
            {
                "match": "\\[",
                "set": "expression_until_square_bracket"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "string_literal"
            }
        ],
        "method_definition_in_class": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_continue__method_definition_in_class",
                    "_main__method_definition_in_class"
                ]
            }
        ],
        "_parts__method_definition_in_class": [
            {
                "match": "[;}]",
                "pop": true
            },
            {
                "match": "\\*",
                "scope": "keyword.operator.js",
                "set": [
                    "_finish_method__method_definition_in_class",
                    "_need_property_name_for_method__method_definition_in_class"
                ]
            },
            {
                "match": "{{b_before}}async{{b_after}}(?={{to_token}}(?!\\(|[;}]|{{line_terminator}}))",
                "scope": "storage.modifier.js",
                "set": [
                    "_finish_method__method_definition_in_class",
                    "_need_property_name_for_method__method_definition_in_class"
                ]
            },
            {
                "match": "{{b_before}}get{{b_after}}(?={{to_token}}(?!\\(|[;}]|{{line_terminator}}))",
                "scope": "storage.type.js",
                "set": [
                    "_finish_getter__method_definition_in_class",
                    "_need_property_name_for_method__method_definition_in_class"
                ]
            },
            {
                "match": "{{b_before}}set{{b_after}}(?={{to_token}}(?!\\(|[;}]|{{line_terminator}}))",
                "scope": "storage.type.js",
                "set": [
                    "_finish_setter__method_definition_in_class",
                    "_need_property_name_for_method__method_definition_in_class"
                ]
            },
            {
                "include": "property_name_requires_parenthesis_for_method"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_main__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{b_before}}static{{b_after}}",
                "scope": "storage.modifier.js",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "include": "_parts__method_definition_in_class"
                    }
                ]
            },
            {
                "include": "_parts__method_definition_in_class"
            }
        ],
        "_continue__method_definition_in_class": [
            {
                "match": "(?<=\\})",
                "pop": true
            },
            {
                "match": "(?<=;)",
                "set": "method_definition_in_class"
            },
            {
                "match": "{{otherwise}}",
                "push": "_finish_method__method_definition_in_class"
            }
        ],
        "_need_property_name_for_method__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=[;}])",
                "pop": true
            },
            {
                "include": "property_name_for_method"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_method__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[;}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_class",
                    "_finish_method_block__method_definition_in_class",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_getter__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[;}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_class",
                    "_finish_method_block__method_definition_in_class",
                    "need_closing_parenthesis"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_setter__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[;}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_class",
                    "_finish_method_block__method_definition_in_class",
                    "parameter_binding_until_parenthesis_with_initializer"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_method_block__method_definition_in_class": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=[;}])",
                "pop": true
            },
            {
                "include": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_exit_method__method_definition_in_class": [
            {
                "match": "{{otherwise}}",
                "set": "_main__method_definition_in_class"
            },
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[;}]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "method_definition_in_object_literal": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_continue__method_definition_in_object_literal",
                    "_main__method_definition_in_object_literal"
                ]
            }
        ],
        "_parts__method_definition_in_object_literal": [
            {
                "match": ",",
                "scope": "invalid.illegal.js"
            },
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": "expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{ident}}{{property_assignment_for_function}}",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "{{ident}}(?={{to_token}}:)",
                "scope": "entity.name.property.js",
                "pop": true
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "match": "\\*",
                "scope": "keyword.operator.js",
                "set": [
                    "_finish_method__method_definition_in_object_literal",
                    "_need_property_name_for_method__method_definition_in_object_literal"
                ]
            },
            {
                "match": "{{b_before}}async{{b_after}}(?={{to_token}}(?!\\(|[,}]|{{line_terminator}}))",
                "scope": "storage.modifier.js",
                "set": [
                    "_finish_method__method_definition_in_object_literal",
                    "_need_property_name_for_method__method_definition_in_object_literal"
                ]
            },
            {
                "match": "{{b_before}}get{{b_after}}(?={{to_token}}(?!\\(|[,}]|{{line_terminator}}))",
                "scope": "storage.type.js",
                "set": [
                    "_finish_getter__method_definition_in_object_literal",
                    "_need_property_name_for_method__method_definition_in_object_literal"
                ]
            },
            {
                "match": "{{b_before}}set{{b_after}}(?={{to_token}}(?!\\(|[,}]|{{line_terminator}}))",
                "scope": "storage.type.js",
                "set": [
                    "_finish_setter__method_definition_in_object_literal",
                    "_need_property_name_for_method__method_definition_in_object_literal"
                ]
            },
            {
                "include": "property_name_requires_parenthesis_for_method"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "need_comma_or_closing_curly_bracket"
            },
            {
                "match": "{{ident}}",
                "set": "need_comma_or_closing_curly_bracket"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_main__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "_parts__method_definition_in_object_literal"
            }
        ],
        "_continue__method_definition_in_object_literal": [
            {
                "match": "(?<=\\})",
                "pop": true
            },
            {
                "match": "(?<=,)",
                "set": "method_definition_in_object_literal"
            },
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js",
                "set": "method_definition_in_object_literal"
            },
            {
                "match": "{{to_token}}:",
                "push": "expression_until_comma_or_curly_bracket"
            },
            {
                "match": "{{otherwise}}",
                "push": "_finish_method__method_definition_in_object_literal"
            }
        ],
        "_need_property_name_for_method__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "include": "property_name_for_method"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_method__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_object_literal",
                    "_finish_method_block__method_definition_in_object_literal",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_getter__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_object_literal",
                    "_finish_method_block__method_definition_in_object_literal",
                    "need_closing_parenthesis"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_setter__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_exit_method__method_definition_in_object_literal",
                    "_finish_method_block__method_definition_in_object_literal",
                    "parameter_binding_until_parenthesis_with_initializer"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finish_method_block__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=[,}])",
                "pop": true
            },
            {
                "include": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_exit_method__method_definition_in_object_literal": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "[,}]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "include": "block_statement"
            },
            {
                "include": "_variable_statement__statement_in_block"
            },
            {
                "include": "_function_declaration__statement_in_block"
            },
            {
                "include": "_class_declaration__statement_in_block"
            },
            {
                "include": "_if_statement__statement_in_block"
            },
            {
                "include": "_with_or_while_statement__statement_in_block"
            },
            {
                "include": "_do_statement__statement_in_block"
            },
            {
                "include": "_for_statement__statement_in_block"
            },
            {
                "include": "_switch_statement__statement_in_block"
            },
            {
                "include": "_try_statement__statement_in_block"
            },
            {
                "include": "_goto_statement__statement_in_block"
            },
            {
                "include": "_termination_statement__statement_in_block"
            },
            {
                "include": "_debugger_statement__statement_in_block"
            },
            {
                "include": "_labelled_statement__statement_in_block"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": "_expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_end_of_statement__statement_in_block": [
            {
                "match": "{{statement_terminator}}",
                "pop": true
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement__statement_in_block": [
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": "_variable_statement_want_binding__statement_in_block"
            }
        ],
        "_variable_initializer__statement_in_block": [
            {
                "match": "(?<=[}\\]])",
                "set": [
                    {
                        "match": "{{line_terminator}}",
                        "set": "_variable_initializer_likely_candidates__statement_in_block"
                    },
                    {
                        "include": "_variable_initializer_likely_candidates__statement_in_block"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": "_variable_statement_want_continue__statement_in_block"
            }
        ],
        "_variable_initializer_likely_candidates__statement_in_block": [
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement_in_block"
            },
            {
                "match": ";",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js",
                "set": "_variable_statement_want_binding__statement_in_block"
            }
        ],
        "_variable_statement_continue__statement_in_block": [
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement_in_block"
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_in_block"
            }
        ],
        "_function_declaration__statement_in_block": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_declaration_want_name__statement_in_block"
            }
        ],
        "_declaration_name__statement_in_block": [
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "pop": true
            }
        ],
        "_class_declaration__statement_in_block": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_declaration_want_name__statement_in_block"
            }
        ],
        "_class_declaration_curly_bracket_or_extends__statement_in_block": [
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_declaration_want_inheritance__statement_in_block"
            }
        ],
        "_if_statement__statement_in_block": [
            {
                "match": "{{b_before}}if{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_if_statement_want_parenthesis__statement_in_block"
            }
        ],
        "_if_statement_possible_exit__statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_optional_else_statement__statement_in_block",
                    "statement_in_block"
                ]
            }
        ],
        "_optional_else_statement__statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{b_before}}else{{b_after}}",
                "scope": "keyword.control.js",
                "set": "statement_in_block"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_with_or_while_statement__statement_in_block": [
            {
                "match": "{{b_before}}(?:while|with){{b_after}}",
                "scope": "keyword.control.js",
                "set": "_with_or_while_statement_want_parenthesis__statement_in_block"
            }
        ],
        "_do_statement__statement_in_block": [
            {
                "match": "{{b_before}}do{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_do_statement_possible_exit__statement_in_block"
            }
        ],
        "_do_statement_possible_exit__statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_do_while",
                    "statement_in_block"
                ]
            }
        ],
        "_do_while": [
            {
                "match": "{{b_before}}while{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_do_while_want_parenthesis"
            }
        ],
        "_for_statement__statement_in_block": [
            {
                "match": "{{b_before}}for{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_for_statement_want_parenthesis__statement_in_block"
            }
        ],
        "_for_statement_first_section__statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\)",
                "set": "statement_in_block"
            },
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": [
                    "_for_statement_interpret_binding__statement_in_block",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_for_statement_interpret_expression__statement_in_block",
                    "_for_statement_first_expression"
                ]
            }
        ],
        "_for_statement_interpret_expression__statement_in_block": [
            {
                "match": "\\)",
                "set": "statement_in_block"
            },
            {
                "match": ";",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis"
                ]
            }
        ],
        "_for_statement_interpret_binding__statement_in_block": [
            {
                "match": "\\)",
                "set": "statement_in_block"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": [
                    "_for_statement_variable_binding_continuation__statement_in_block",
                    "expression_until_for_binding"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_for_statement_variable_binding_continuation__statement_in_block",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_variable_binding_continuation__statement_in_block": [
            {
                "match": "\\)",
                "set": "statement_in_block"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_for_binding"
            },
            {
                "match": ",",
                "push": "variable_binding_for_for_statement"
            },
            {
                "match": ";",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement__statement_in_block": [
            {
                "match": "{{b_before}}switch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_switch_statement_want_parenthesis__statement_in_block"
            }
        ],
        "_try_statement__statement_in_block": [
            {
                "match": "{{b_before}}try{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_try_statement_want_curly_bracket__statement_in_block"
            }
        ],
        "_catch_or_finally_statement__statement_in_block": [
            {
                "include": "_finally_statement__statement_in_block"
            },
            {
                "match": "{{b_before}}catch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_catch_statement_want_parenthesis__statement_in_block"
            }
        ],
        "_optional_finally_statement__statement_in_block": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "_finally_statement__statement_in_block"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_finally_statement__statement_in_block": [
            {
                "match": "{{b_before}}finally{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_finally_statement_want_curly_bracket__statement_in_block"
            }
        ],
        "_goto_statement__statement_in_block": [
            {
                "match": "{{b_before}}(?:break|continue){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_end_of_statement__statement_in_block"
                    },
                    {
                        "match": "{{ident}}",
                        "scope": "entity.name.section.js",
                        "set": "_end_of_statement__statement_in_block"
                    },
                    {
                        "include": "_end_of_statement__statement_in_block"
                    }
                ]
            }
        ],
        "_termination_statement__statement_in_block": [
            {
                "match": "{{b_before}}(?:return|throw){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{to_token}}{{statement_terminator}}",
                        "pop": true
                    },
                    {
                        "match": "{{otherwise}}",
                        "set": "_expression_until_end_of_statement__statement_in_block"
                    }
                ]
            }
        ],
        "_debugger_statement__statement_in_block": [
            {
                "match": "{{b_before}}debugger{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_end_of_statement__statement_in_block"
            }
        ],
        "_labelled_statement__statement_in_block": [
            {
                "match": "({{reserved_word}}){{to_token}}:",
                "captures": {
                    "1": "invalid.illegal.js"
                },
                "set": "statement_in_block"
            },
            {
                "match": "({{ident}}){{to_token}}:",
                "captures": {
                    "1": "entity.name.section.js"
                },
                "set": "statement_in_block"
            }
        ],
        "statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "import_statement"
            },
            {
                "include": "export_statement"
            },
            {
                "include": "block_statement"
            },
            {
                "include": "_variable_statement__statement_top_level"
            },
            {
                "include": "_function_declaration__statement_top_level"
            },
            {
                "include": "_class_declaration__statement_top_level"
            },
            {
                "include": "_if_statement__statement_top_level"
            },
            {
                "include": "_with_or_while_statement__statement_top_level"
            },
            {
                "include": "_do_statement__statement_top_level"
            },
            {
                "include": "_for_statement__statement_top_level"
            },
            {
                "include": "_switch_statement__statement_top_level"
            },
            {
                "include": "_try_statement__statement_top_level"
            },
            {
                "include": "_goto_statement__statement_top_level"
            },
            {
                "include": "_termination_statement__statement_top_level"
            },
            {
                "include": "_debugger_statement__statement_top_level"
            },
            {
                "include": "_labelled_statement__statement_top_level"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": "_expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_end_of_statement__statement_top_level": [
            {
                "match": "{{statement_terminator}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement__statement_top_level": [
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": "_variable_statement_want_binding__statement_top_level"
            }
        ],
        "_variable_initializer__statement_top_level": [
            {
                "match": "(?<=[}\\]])",
                "set": [
                    {
                        "match": "{{line_terminator}}",
                        "set": "_variable_initializer_likely_candidates__statement_top_level"
                    },
                    {
                        "include": "_variable_initializer_likely_candidates__statement_top_level"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": "_variable_statement_want_continue__statement_top_level"
            }
        ],
        "_variable_initializer_likely_candidates__statement_top_level": [
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement_top_level"
            },
            {
                "match": ";",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js",
                "set": "_variable_statement_want_binding__statement_top_level"
            }
        ],
        "_variable_statement_continue__statement_top_level": [
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement_top_level"
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_top_level"
            }
        ],
        "_function_declaration__statement_top_level": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_declaration_want_name__statement_top_level"
            }
        ],
        "_declaration_name__statement_top_level": [
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "pop": true
            }
        ],
        "_class_declaration__statement_top_level": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_declaration_want_name__statement_top_level"
            }
        ],
        "_class_declaration_curly_bracket_or_extends__statement_top_level": [
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_declaration_want_inheritance__statement_top_level"
            }
        ],
        "_if_statement__statement_top_level": [
            {
                "match": "{{b_before}}if{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_if_statement_want_parenthesis__statement_top_level"
            }
        ],
        "_if_statement_possible_exit__statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_optional_else_statement__statement_top_level",
                    "statement"
                ]
            }
        ],
        "_optional_else_statement__statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{b_before}}else{{b_after}}",
                "scope": "keyword.control.js",
                "set": "statement"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_with_or_while_statement__statement_top_level": [
            {
                "match": "{{b_before}}(?:while|with){{b_after}}",
                "scope": "keyword.control.js",
                "set": "_with_or_while_statement_want_parenthesis__statement_top_level"
            }
        ],
        "_do_statement__statement_top_level": [
            {
                "match": "{{b_before}}do{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_do_statement_possible_exit__statement_top_level"
            }
        ],
        "_do_statement_possible_exit__statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_do_while",
                    "statement"
                ]
            }
        ],
        "_for_statement__statement_top_level": [
            {
                "match": "{{b_before}}for{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_for_statement_want_parenthesis__statement_top_level"
            }
        ],
        "_for_statement_first_section__statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": [
                    "_for_statement_interpret_binding__statement_top_level",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_for_statement_interpret_expression__statement_top_level",
                    "_for_statement_first_expression"
                ]
            }
        ],
        "_for_statement_interpret_expression__statement_top_level": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            }
        ],
        "_for_statement_interpret_binding__statement_top_level": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": [
                    "_for_statement_variable_binding_continuation__statement_top_level",
                    "expression_until_for_binding"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_for_statement_variable_binding_continuation__statement_top_level",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_variable_binding_continuation__statement_top_level": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_for_binding"
            },
            {
                "match": ",",
                "push": "variable_binding_for_for_statement"
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement__statement_top_level": [
            {
                "match": "{{b_before}}switch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_switch_statement_want_parenthesis__statement_top_level"
            }
        ],
        "_try_statement__statement_top_level": [
            {
                "match": "{{b_before}}try{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_try_statement_want_curly_bracket__statement_top_level"
            }
        ],
        "_catch_or_finally_statement__statement_top_level": [
            {
                "include": "_finally_statement__statement_top_level"
            },
            {
                "match": "{{b_before}}catch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_catch_statement_want_parenthesis__statement_top_level"
            }
        ],
        "_optional_finally_statement__statement_top_level": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "_finally_statement__statement_top_level"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_finally_statement__statement_top_level": [
            {
                "match": "{{b_before}}finally{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_finally_statement_want_curly_bracket__statement_top_level"
            }
        ],
        "_goto_statement__statement_top_level": [
            {
                "match": "{{b_before}}(?:break|continue){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_end_of_statement__statement_top_level"
                    },
                    {
                        "match": "{{ident}}",
                        "scope": "entity.name.section.js",
                        "set": "_end_of_statement__statement_top_level"
                    },
                    {
                        "include": "_end_of_statement__statement_top_level"
                    }
                ]
            }
        ],
        "_termination_statement__statement_top_level": [
            {
                "match": "{{b_before}}(?:return|throw){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{to_token}}{{statement_terminator}}",
                        "pop": true
                    },
                    {
                        "match": "{{otherwise}}",
                        "set": "_expression_until_end_of_statement__statement_top_level"
                    }
                ]
            }
        ],
        "_debugger_statement__statement_top_level": [
            {
                "match": "{{b_before}}debugger{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_end_of_statement__statement_top_level"
            }
        ],
        "_labelled_statement__statement_top_level": [
            {
                "match": "({{reserved_word}}){{to_token}}:",
                "captures": {
                    "1": "invalid.illegal.js"
                },
                "set": "statement"
            },
            {
                "match": "({{ident}}){{to_token}}:",
                "captures": {
                    "1": "entity.name.section.js"
                },
                "set": "statement"
            }
        ],
        "statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "block_statement"
            },
            {
                "include": "_variable_statement__statement"
            },
            {
                "include": "_function_declaration__statement"
            },
            {
                "include": "_class_declaration__statement"
            },
            {
                "include": "_if_statement__statement"
            },
            {
                "include": "_with_or_while_statement__statement"
            },
            {
                "include": "_do_statement__statement"
            },
            {
                "include": "_for_statement__statement"
            },
            {
                "include": "_switch_statement__statement"
            },
            {
                "include": "_try_statement__statement"
            },
            {
                "include": "_goto_statement__statement"
            },
            {
                "include": "_termination_statement__statement"
            },
            {
                "include": "_debugger_statement__statement"
            },
            {
                "include": "_labelled_statement__statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": "_expression_until_end_of_statement__statement"
            }
        ],
        "_end_of_statement__statement": [
            {
                "match": "{{statement_terminator}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement__statement": [
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": "_variable_statement_want_binding__statement"
            }
        ],
        "_variable_initializer__statement": [
            {
                "match": "(?<=[}\\]])",
                "set": [
                    {
                        "match": "{{line_terminator}}",
                        "set": "_variable_initializer_likely_candidates__statement"
                    },
                    {
                        "include": "_variable_initializer_likely_candidates__statement"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": "_variable_statement_want_continue__statement"
            }
        ],
        "_variable_initializer_likely_candidates__statement": [
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement"
            },
            {
                "match": ";",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": ",",
                "scope": "invalid.illegal.js",
                "set": "_variable_statement_want_binding__statement"
            }
        ],
        "_variable_statement_continue__statement": [
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "_expression_until_variable_binding__statement"
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement"
            }
        ],
        "_function_declaration__statement": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_declaration_want_name__statement"
            }
        ],
        "_declaration_name__statement": [
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "pop": true
            }
        ],
        "_class_declaration__statement": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_declaration_want_name__statement"
            }
        ],
        "_class_declaration_curly_bracket_or_extends__statement": [
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_declaration_want_inheritance__statement"
            }
        ],
        "_if_statement__statement": [
            {
                "match": "{{b_before}}if{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_if_statement_want_parenthesis__statement"
            }
        ],
        "_if_statement_possible_exit__statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_optional_else_statement__statement",
                    "statement"
                ]
            }
        ],
        "_optional_else_statement__statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{b_before}}else{{b_after}}",
                "scope": "keyword.control.js",
                "set": "statement"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_with_or_while_statement__statement": [
            {
                "match": "{{b_before}}(?:while|with){{b_after}}",
                "scope": "keyword.control.js",
                "set": "_with_or_while_statement_want_parenthesis__statement"
            }
        ],
        "_do_statement__statement": [
            {
                "match": "{{b_before}}do{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_do_statement_possible_exit__statement"
            }
        ],
        "_do_statement_possible_exit__statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_do_while",
                    "statement"
                ]
            }
        ],
        "_for_statement__statement": [
            {
                "match": "{{b_before}}for{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_for_statement_want_parenthesis__statement"
            }
        ],
        "_for_statement_first_section__statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "{{b_before}}(?:var|let|const){{b_after}}",
                "scope": "storage.type.js",
                "set": [
                    "_for_statement_interpret_binding__statement",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    "_for_statement_interpret_expression__statement",
                    "_for_statement_first_expression"
                ]
            }
        ],
        "_for_statement_interpret_expression__statement": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            }
        ],
        "_for_statement_interpret_binding__statement": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": [
                    "_for_statement_variable_binding_continuation__statement",
                    "expression_until_for_binding"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_for_statement_variable_binding_continuation__statement",
                    "variable_binding_for_for_statement"
                ]
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "match": "{{b_before}}(?:of|in){{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_variable_binding_continuation__statement": [
            {
                "match": "\\)",
                "set": "statement"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_for_binding"
            },
            {
                "match": ",",
                "push": "variable_binding_for_for_statement"
            },
            {
                "match": ";",
                "set": [
                    "statement",
                    "expression_until_parenthesis",
                    "expression_until_for_statement_third_section"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement__statement": [
            {
                "match": "{{b_before}}switch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_switch_statement_want_parenthesis__statement"
            }
        ],
        "_try_statement__statement": [
            {
                "match": "{{b_before}}try{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_try_statement_want_curly_bracket__statement"
            }
        ],
        "_catch_or_finally_statement__statement": [
            {
                "include": "_finally_statement__statement"
            },
            {
                "match": "{{b_before}}catch{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_catch_statement_want_parenthesis__statement"
            }
        ],
        "_optional_finally_statement__statement": [
            {
                "match": "{{non_token}}"
            },
            {
                "include": "_finally_statement__statement"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_finally_statement__statement": [
            {
                "match": "{{b_before}}finally{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_finally_statement_want_curly_bracket__statement"
            }
        ],
        "_goto_statement__statement": [
            {
                "match": "{{b_before}}(?:break|continue){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_end_of_statement__statement"
                    },
                    {
                        "match": "{{ident}}",
                        "scope": "entity.name.section.js",
                        "set": "_end_of_statement__statement"
                    },
                    {
                        "include": "_end_of_statement__statement"
                    }
                ]
            }
        ],
        "_termination_statement__statement": [
            {
                "match": "{{b_before}}(?:return|throw){{b_after}}",
                "scope": "keyword.control.js",
                "set": [
                    {
                        "match": "{{to_token}}{{statement_terminator}}",
                        "pop": true
                    },
                    {
                        "match": "{{otherwise}}",
                        "set": "_expression_until_end_of_statement__statement"
                    }
                ]
            }
        ],
        "_debugger_statement__statement": [
            {
                "match": "{{b_before}}debugger{{b_after}}",
                "scope": "keyword.control.js",
                "set": "_end_of_statement__statement"
            }
        ],
        "_labelled_statement__statement": [
            {
                "match": "({{reserved_word}}){{to_token}}:",
                "captures": {
                    "1": "invalid.illegal.js"
                },
                "set": "statement"
            },
            {
                "match": "({{ident}}){{to_token}}:",
                "captures": {
                    "1": "entity.name.section.js"
                },
                "set": "statement"
            }
        ],
        "identifier_reference": [
            {
                "match": "{{b_before}}(?:Object|Function|Boolean|String|Number|BigInt|Symbol|Error|EvalError|RangeError|ReferenceError|SyntaxError|TypeError|URIError|Date|RegExp|Array|Uint8Array|Uint8ClampedArray|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|BigInt64Array|BigUint64Array|Map|Set|WeakMap|WeakSet|ArrayBuffer|DataView|Promise|Proxy){{b_after}}",
                "scope": "support.class.js",
                "set": "_optional_postfix_operator"
            },
            {
                "match": "{{b_before}}(?:eval|import|isFinite|isNaN|parseFloat|parseInt|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|setTimeout|setInterval|clearTimeout|clearInterval|setImmediate|clearImmediate){{b_after}}",
                "scope": "support.function.js",
                "set": "_optional_postfix_operator"
            },
            {
                "match": "{{b_before}}(?:console|global|Math|JSON|Reflect|Intl|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": "_optional_postfix_operator"
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:unescape|escape){{b_after}}",
                "scope": "support.function.js",
                "set": "_optional_postfix_operator"
            },
            {
                "match": "({{ident}}){{to_token}}\\.{{to_token}}(prototype){{b_after}}",
                "captures": {
                    "1": "support.class.js",
                    "2": "support.constant.js"
                },
                "set": "_optional_postfix_operator"
            },
            {
                "match": "{{ident}}",
                "set": "_optional_postfix_operator"
            }
        ],
        "identifier_reference_simple": [
            {
                "match": "{{b_before}}(?:Object|Function|Boolean|String|Number|BigInt|Symbol|Error|EvalError|RangeError|ReferenceError|SyntaxError|TypeError|URIError|Date|RegExp|Array|Uint8Array|Uint8ClampedArray|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|BigInt64Array|BigUint64Array|Map|Set|WeakMap|WeakSet|ArrayBuffer|DataView|Promise|Proxy){{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:eval|import|isFinite|isNaN|parseFloat|parseInt|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|setTimeout|setInterval|clearTimeout|clearInterval|setImmediate|clearImmediate){{b_after}}",
                "scope": "support.function.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:console|global|Math|JSON|Reflect|Intl|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:unescape|escape){{b_after}}",
                "scope": "support.function.js",
                "pop": true
            },
            {
                "match": "({{ident}}){{to_token}}\\.{{to_token}}(prototype){{b_after}}",
                "captures": {
                    "1": "support.class.js",
                    "2": "support.constant.js"
                },
                "pop": true
            },
            {
                "match": "{{ident}}",
                "pop": true
            }
        ],
        "object_destructuring_for_parameter": [
            {
                "match": "\\{",
                "set": [
                    "_object_destructuring_continue__object_destructuring_for_parameter",
                    "_object_destructuring_value__object_destructuring_for_parameter",
                    "_object_destructuring_pattern__object_destructuring_for_parameter"
                ]
            }
        ],
        "_object_destructuring_pattern__object_destructuring_for_parameter": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "include": "_destructuring_spread__object_destructuring_for_parameter"
            },
            {
                "include": "property_name_requires_colon"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_after___parameter_binding__object_destructuring_for_parameter"
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "set": "_after___parameter_binding__object_destructuring_for_parameter"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_object_destructuring_value__object_destructuring_for_parameter": [
            {
                "match": "(?<=[,}])",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    {
                        "match": "[,}]",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "match": ":",
                        "set": "_parameter_binding__object_destructuring_for_parameter"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_object_destructuring_continue__object_destructuring_for_parameter": [
            {
                "match": "(?<=,)",
                "push": [
                    "_object_destructuring_value__object_destructuring_for_parameter",
                    "_object_destructuring_pattern__object_destructuring_for_parameter"
                ]
            },
            {
                "match": "(?<=\\})",
                "pop": true
            }
        ],
        "object_destructuring_for_variable": [
            {
                "match": "\\{",
                "set": [
                    "_object_destructuring_continue__object_destructuring_for_variable",
                    "_object_destructuring_value__object_destructuring_for_variable",
                    "_object_destructuring_pattern__object_destructuring_for_variable"
                ]
            }
        ],
        "_object_destructuring_pattern__object_destructuring_for_variable": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "include": "_destructuring_spread__object_destructuring_for_variable"
            },
            {
                "include": "property_name_requires_colon"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_after___parameter_binding__object_destructuring_for_variable"
            },
            {
                "match": "{{ident}}",
                "set": "_after___parameter_binding__object_destructuring_for_variable"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_object_destructuring_value__object_destructuring_for_variable": [
            {
                "match": "(?<=[,}])",
                "pop": true
            },
            {
                "match": "{{otherwise}}",
                "set": [
                    {
                        "match": "[,}]",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "match": ":",
                        "set": "_parameter_binding__object_destructuring_for_variable"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_object_destructuring_continue__object_destructuring_for_variable": [
            {
                "match": "(?<=,)",
                "push": [
                    "_object_destructuring_value__object_destructuring_for_variable",
                    "_object_destructuring_pattern__object_destructuring_for_variable"
                ]
            },
            {
                "match": "(?<=\\})",
                "pop": true
            }
        ],
        "array_destructuring_for_parameter": [
            {
                "match": "\\[",
                "set": "_parameter_binding__array_destructuring_for_parameter"
            }
        ],
        "array_destructuring_for_variable": [
            {
                "match": "\\[",
                "set": "_parameter_binding__array_destructuring_for_variable"
            }
        ],
        "_import_statement_core": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}[^,;f{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_import_statement_optional_addition"
                    },
                    {
                        "match": "{{ident}}",
                        "set": "_import_statement_optional_addition"
                    },
                    {
                        "include": "_import_all_named"
                    },
                    {
                        "include": "_import_named_block"
                    },
                    {
                        "match": "(?=['\"])",
                        "set": "_import_location"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_import_statement_optional_addition"
            },
            {
                "match": "{{ident}}",
                "set": "_import_statement_optional_addition"
            },
            {
                "include": "_import_all_named"
            },
            {
                "include": "_import_named_block"
            },
            {
                "match": "(?=['\"])",
                "set": "_import_location"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_statement_optional_addition": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "{{b_before}}(?=(?:from|fro|fr|f){{b_after}})",
                        "set": "_import_from"
                    },
                    {
                        "match": ",",
                        "set": "_import_statement_addition"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?=(?:from|fro|fr|f){{b_after}})",
                "set": "_import_from"
            },
            {
                "match": ",",
                "set": "_import_statement_addition"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_statement_addition": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "include": "_import_named_block"
                    },
                    {
                        "match": "(?=\\*)",
                        "set": "_import_all_named"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "include": "_import_named_block"
            },
            {
                "match": "(?=\\*)",
                "set": "_import_all_named"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_all_named_as": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "{{b_before}}as{{b_after}}",
                        "set": "_import_all_named_as_ident",
                        "scope": "keyword.operator.js"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}as{{b_after}}",
                "set": "_import_all_named_as_ident",
                "scope": "keyword.operator.js"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_all_named_as_ident": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}[^;f{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "{{reserved_word}}",
                        "scope": "invalid.illegal.js",
                        "set": "_import_from"
                    },
                    {
                        "match": "{{ident}}",
                        "set": "_import_from"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_import_from"
            },
            {
                "match": "{{ident}}",
                "set": "_import_from"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_from": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "{{b_before}}(?:fro|fr|f){{to_token}}{{b_after}}"
                    },
                    {
                        "match": "{{b_before}}from{{b_after}}",
                        "set": "_import_location",
                        "scope": "keyword.operator.js"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?:fro|fr|f){{to_token}}{{b_after}}"
            },
            {
                "match": "{{b_before}}from{{b_after}}",
                "set": "_import_location",
                "scope": "keyword.operator.js"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_import_location": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=['\"])",
                        "set": [
                            "_end_of_statement__statement",
                            "string_literal"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=['\"])",
                "set": [
                    "_end_of_statement__statement",
                    "string_literal"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_export_statement_core": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "{{b_before}}(?=(?:var|let|const){{b_after}})",
                        "set": "_variable_statement__statement"
                    },
                    {
                        "match": "{{b_before}}(?=class{{b_after}})",
                        "set": "_class_declaration__statement"
                    },
                    {
                        "match": "{{b_before}}(?=(?:async{{some_space}})?+function{{b_after}})",
                        "set": "_function_declaration__statement"
                    },
                    {
                        "match": "{{b_before}}default{{b_after}}",
                        "scope": "storage.modifier.js",
                        "set": "_expression_until_end_of_statement__statement"
                    },
                    {
                        "match": "{{b_before}}(?:defaul|defau|defa|def|de|d|cons|con|co|clas|cla|cl|c|functio|functi|funct|func|fun|fu|f|va|v|le|l){{to_token}}{{b_after}}"
                    },
                    {
                        "match": "\\{",
                        "set": [
                            "_end_of_statement__statement",
                            "_export_clause"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?=(?:var|let|const){{b_after}})",
                "set": "_variable_statement__statement"
            },
            {
                "match": "{{b_before}}(?=class{{b_after}})",
                "set": "_class_declaration__statement"
            },
            {
                "match": "{{b_before}}(?=(?:async{{some_space}})?+function{{b_after}})",
                "set": "_function_declaration__statement"
            },
            {
                "match": "{{b_before}}default{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_expression_until_end_of_statement__statement"
            },
            {
                "match": "{{b_before}}(?:defaul|defau|defa|def|de|d|cons|con|co|clas|cla|cl|c|functio|functi|funct|func|fun|fu|f|va|v|le|l){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": [
                    "_end_of_statement__statement",
                    "_export_clause"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;|(?=\\}))[^=,{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?=\\{|\\[|{{ident}})",
                        "set": [
                            "_variable_initializer__statement_in_block",
                            "variable_binding"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{|\\[|{{ident}})",
                "set": [
                    "_variable_initializer__statement_in_block",
                    "variable_binding"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_continue__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=[;=,])",
                        "set": "_variable_statement_continue__statement_in_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=[;=,])",
                "set": "_variable_statement_continue__statement_in_block"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_name__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;|(?=\\}))[^({{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_function_declaration_want_parenthesis__statement_in_block",
                            "_declaration_name__statement_in_block"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_function_declaration_want_parenthesis__statement_in_block",
                    "_declaration_name__statement_in_block"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_function_declaration_want_curly_bracket__statement_in_block",
                            "parameter_binding_list"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_declaration_want_curly_bracket__statement_in_block",
                    "parameter_binding_list"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_name__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;|(?=\\}))[^{e{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket_or_extends__statement_in_block",
                            "_declaration_name__statement_in_block"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket_or_extends__statement_in_block",
                    "_declaration_name__statement_in_block"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket_or_extends__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                        "set": "_class_declaration_curly_bracket_or_extends__statement_in_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                "set": "_class_declaration_curly_bracket_or_extends__statement_in_block"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_inheritance__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;|(?=\\}))[^{{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "\\{",
                        "scope": "invalid.illegal.js",
                        "set": "_class_block"
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket__statement_in_block",
                            "_declaration_name__statement_in_block"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket__statement_in_block",
                    "_declaration_name__statement_in_block"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_class_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_if_statement_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_if_statement_possible_exit__statement_in_block",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_if_statement_possible_exit__statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_with_or_while_statement_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "statement_in_block",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_do_while_want_parenthesis": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": "expression_until_parenthesis"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": "expression_until_parenthesis"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": "_for_statement_first_section__statement_in_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": "_for_statement_first_section__statement_in_block"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_switch_statement_want_curly_bracket__statement_in_block",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_switch_statement_want_curly_bracket__statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_switch_statement_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_switch_statement_block"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_try_statement_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_catch_or_finally_statement__statement_in_block",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_catch_or_finally_statement__statement_in_block",
                    "block_statement"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_parenthesis__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_catch_statement_want_curly_bracket__statement_in_block",
                            "parameter_binding_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_catch_statement_want_curly_bracket__statement_in_block",
                    "parameter_binding_until_parenthesis"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_optional_finally_statement__statement_in_block",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_optional_finally_statement__statement_in_block",
                    "block_statement"
                ]
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finally_statement_want_curly_bracket__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^=,{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?=\\{|\\[|{{ident}})",
                        "set": [
                            "_variable_initializer__statement_top_level",
                            "variable_binding"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{|\\[|{{ident}})",
                "set": [
                    "_variable_initializer__statement_top_level",
                    "variable_binding"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_continue__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=[;=,])",
                        "set": "_variable_statement_continue__statement_top_level"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=[;=,])",
                "set": "_variable_statement_continue__statement_top_level"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_name__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^({{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_function_declaration_want_parenthesis__statement_top_level",
                            "_declaration_name__statement_top_level"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_function_declaration_want_parenthesis__statement_top_level",
                    "_declaration_name__statement_top_level"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_function_declaration_want_curly_bracket__statement_top_level",
                            "parameter_binding_list"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_declaration_want_curly_bracket__statement_top_level",
                    "parameter_binding_list"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_name__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^{e{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket_or_extends__statement_top_level",
                            "_declaration_name__statement_top_level"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket_or_extends__statement_top_level",
                    "_declaration_name__statement_top_level"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket_or_extends__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                        "set": "_class_declaration_curly_bracket_or_extends__statement_top_level"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                "set": "_class_declaration_curly_bracket_or_extends__statement_top_level"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_inheritance__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^{{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "\\{",
                        "scope": "invalid.illegal.js",
                        "set": "_class_block"
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket__statement_top_level",
                            "_declaration_name__statement_top_level"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket__statement_top_level",
                    "_declaration_name__statement_top_level"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_class_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_if_statement_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_if_statement_possible_exit__statement_top_level",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_if_statement_possible_exit__statement_top_level",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_with_or_while_statement_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "statement",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": "_for_statement_first_section__statement_top_level"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": "_for_statement_first_section__statement_top_level"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_switch_statement_want_curly_bracket__statement_top_level",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_switch_statement_want_curly_bracket__statement_top_level",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_switch_statement_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_switch_statement_block"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_try_statement_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_catch_or_finally_statement__statement_top_level",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_catch_or_finally_statement__statement_top_level",
                    "block_statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_parenthesis__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_catch_statement_want_curly_bracket__statement_top_level",
                            "parameter_binding_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_catch_statement_want_curly_bracket__statement_top_level",
                    "parameter_binding_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_optional_finally_statement__statement_top_level",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_optional_finally_statement__statement_top_level",
                    "block_statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finally_statement_want_curly_bracket__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^=,{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?=\\{|\\[|{{ident}})",
                        "set": [
                            "_variable_initializer__statement",
                            "variable_binding"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{|\\[|{{ident}})",
                "set": [
                    "_variable_initializer__statement",
                    "variable_binding"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_variable_statement_want_continue__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=[;=,])",
                        "set": "_variable_statement_continue__statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=[;=,])",
                "set": "_variable_statement_continue__statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_name__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^({{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_function_declaration_want_parenthesis__statement",
                            "_declaration_name__statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_function_declaration_want_parenthesis__statement",
                    "_declaration_name__statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_function_declaration_want_curly_bracket__statement",
                            "parameter_binding_list"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_declaration_want_curly_bracket__statement",
                    "parameter_binding_list"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_declaration_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_name__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^{e{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket_or_extends__statement",
                            "_declaration_name__statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket_or_extends__statement",
                    "_declaration_name__statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket_or_extends__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                        "set": "_class_declaration_curly_bracket_or_extends__statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "(?=\\{|{{b_before}}extends{{b_after}})",
                "set": "_class_declaration_curly_bracket_or_extends__statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_inheritance__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?={{statement_keyword_all}}|{{ident}}{{to_token}}(?!;)[^{{{line_terminator_chars}}])",
                        "pop": true
                    },
                    {
                        "match": "\\{",
                        "scope": "invalid.illegal.js",
                        "set": "_class_block"
                    },
                    {
                        "match": "(?={{ident}})",
                        "set": [
                            "_class_declaration_want_curly_bracket__statement",
                            "_declaration_name__statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "match": "(?={{ident}})",
                "set": [
                    "_class_declaration_want_curly_bracket__statement",
                    "_declaration_name__statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_declaration_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_class_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_if_statement_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_if_statement_possible_exit__statement",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_if_statement_possible_exit__statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_with_or_while_statement_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "statement",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_for_statement_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": "_for_statement_first_section__statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": "_for_statement_first_section__statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_switch_statement_want_curly_bracket__statement",
                            "expression_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_switch_statement_want_curly_bracket__statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_switch_statement_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\{",
                        "set": "_switch_statement_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_switch_statement_block"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_try_statement_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_catch_or_finally_statement__statement",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_catch_or_finally_statement__statement",
                    "block_statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_parenthesis__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "\\(",
                        "set": [
                            "_catch_statement_want_curly_bracket__statement",
                            "parameter_binding_until_parenthesis"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_catch_statement_want_curly_bracket__statement",
                    "parameter_binding_until_parenthesis"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_catch_statement_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": [
                            "_optional_finally_statement__statement",
                            "block_statement"
                        ]
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": [
                    "_optional_finally_statement__statement",
                    "block_statement"
                ]
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_finally_statement_want_curly_bracket__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": "(?=\\{)",
                        "set": "block_statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_destructuring_spread__object_destructuring_for_parameter": [
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": [
                    "_end___destructuring_spread__object_destructuring_for_parameter",
                    "_identifier___destructuring_spread__object_destructuring_for_parameter"
                ]
            }
        ],
        "_identifier___destructuring_spread__object_destructuring_for_parameter": [
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_end___destructuring_spread__object_destructuring_for_parameter": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_parameter_binding__object_destructuring_for_parameter": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after___parameter_binding__object_destructuring_for_parameter",
                    "___parameter_binding__object_destructuring_for_parameter"
                ]
            }
        ],
        "___parameter_binding__object_destructuring_for_parameter": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after___parameter_binding__object_destructuring_for_parameter": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_comma_or_curly_bracket"
            },
            {
                "match": ",",
                "pop": true
            },
            {
                "match": "\\}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_destructuring_spread__object_destructuring_for_variable": [
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": [
                    "_end___destructuring_spread__object_destructuring_for_variable",
                    "_identifier___destructuring_spread__object_destructuring_for_variable"
                ]
            }
        ],
        "_identifier___destructuring_spread__object_destructuring_for_variable": [
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_end___destructuring_spread__object_destructuring_for_variable": [
            {
                "match": "\\}",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_curly_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_parameter_binding__object_destructuring_for_variable": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after___parameter_binding__object_destructuring_for_variable",
                    "___parameter_binding__object_destructuring_for_variable"
                ]
            }
        ],
        "___parameter_binding__object_destructuring_for_variable": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\})",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after___parameter_binding__object_destructuring_for_variable": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_comma_or_curly_bracket"
            },
            {
                "match": ",",
                "pop": true
            },
            {
                "match": "\\}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_destructuring_spread__array_destructuring_for_parameter": [
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": [
                    "_end___destructuring_spread__array_destructuring_for_parameter",
                    "_identifier___destructuring_spread__array_destructuring_for_parameter"
                ]
            }
        ],
        "_identifier___destructuring_spread__array_destructuring_for_parameter": [
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_end___destructuring_spread__array_destructuring_for_parameter": [
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_parameter_binding__array_destructuring_for_parameter": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after___parameter_binding__array_destructuring_for_parameter",
                    "___parameter_binding__array_destructuring_for_parameter"
                ]
            }
        ],
        "___parameter_binding__array_destructuring_for_parameter": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ",++"
            },
            {
                "include": "_destructuring_spread__array_destructuring_for_parameter"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "include": "destructuring_for_parameter"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "variable.language.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after___parameter_binding__array_destructuring_for_parameter": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": ",",
                "push": "___parameter_binding__array_destructuring_for_parameter"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_destructuring_spread__array_destructuring_for_variable": [
            {
                "match": "\\.\\.\\.",
                "scope": "keyword.operator.js",
                "set": [
                    "_end___destructuring_spread__array_destructuring_for_variable",
                    "_identifier___destructuring_spread__array_destructuring_for_variable"
                ]
            }
        ],
        "_identifier___destructuring_spread__array_destructuring_for_variable": [
            {
                "match": "(?=(?=\\]))",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_end___destructuring_spread__array_destructuring_for_variable": [
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "set": "expression_until_square_bracket_ahead_no_comma"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_parameter_binding__array_destructuring_for_variable": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_after___parameter_binding__array_destructuring_for_variable",
                    "___parameter_binding__array_destructuring_for_variable"
                ]
            }
        ],
        "___parameter_binding__array_destructuring_for_variable": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ",++"
            },
            {
                "include": "_destructuring_spread__array_destructuring_for_variable"
            },
            {
                "match": "(?=\\])",
                "pop": true
            },
            {
                "include": "destructuring_for_variable"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_after___parameter_binding__array_destructuring_for_variable": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "=",
                "scope": "keyword.operator.js",
                "push": "expression_until_comma_or_square_bracket_ahead"
            },
            {
                "match": ",",
                "push": "___parameter_binding__array_destructuring_for_variable"
            },
            {
                "match": "\\]",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            }
        ],
        "_primary_parts___expression_until_end_of_statement__statement_in_block": [
            {
                "include": "_arrow_function_expression___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_class_expression___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_prefix_operators___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_unary_operators___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_primary___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_end_of_statement__statement_in_block"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            }
        ],
        "_new_target___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_end_of_statement__statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_primary___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_class_name_deep___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_function_expression___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_function_expression_name___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_end_of_statement__statement_in_block",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_class_expression_name___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_in_block"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_in_block",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_in_block",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_in_block",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_end_of_statement__statement_in_block": [
            {
                "include": "_instanceof_keyword___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_binary_operators___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_dot_reference___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_square_bracket_reference___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_function_invocation___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_template_literal___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "_conditional_expression___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_secondary___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";|(?=\\})",
                        "pop": true
                    },
                    {
                        "include": "_secondary_parts___expression_until_end_of_statement__statement_in_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "include": "_secondary_parts___expression_until_end_of_statement__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_class_name_shallow___expression_until_end_of_statement__statement_in_block"
                ]
            }
        ],
        "_binary_operators___expression_until_end_of_statement__statement_in_block": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block"
                ]
            }
        ],
        "_dot_reference___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_end_of_statement__statement_in_block"
            }
        ],
        "_dot_reference_contents___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_end_of_statement__statement_in_block"
                    }
                ]
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_end_of_statement__statement_in_block": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_in_block",
                    "_primary___expression_until_end_of_statement__statement_in_block",
                    "expression_until_colon"
                ]
            }
        ],
        "_expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            }
        ],
        "_primary_parts___expression_until_variable_binding__statement_in_block": [
            {
                "include": "_arrow_function_expression___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_class_expression___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_prefix_operators___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_unary_operators___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_primary___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_variable_binding__statement_in_block"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_variable_binding__statement_in_block"
                    }
                ]
            }
        ],
        "_new_target___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_variable_binding__statement_in_block",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_primary___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_class_name_deep___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_variable_binding__statement_in_block": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;|(?=\\}))",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_function_expression___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_function_expression_name___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_variable_binding__statement_in_block",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_class_expression_name___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement_in_block"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;|(?=\\}))",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_in_block",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_in_block",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_in_block",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_variable_binding__statement_in_block": [
            {
                "include": "_instanceof_keyword___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_binary_operators___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_dot_reference___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_square_bracket_reference___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_function_invocation___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_template_literal___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "_conditional_expression___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_secondary___expression_until_variable_binding__statement_in_block": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";|(?=\\})",
                        "pop": true
                    },
                    {
                        "match": ",",
                        "set": "_variable_statement_want_binding__statement_in_block"
                    },
                    {
                        "include": "_secondary_parts___expression_until_variable_binding__statement_in_block"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_in_block"
            },
            {
                "include": "_secondary_parts___expression_until_variable_binding__statement_in_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_class_name_shallow___expression_until_variable_binding__statement_in_block"
                ]
            }
        ],
        "_binary_operators___expression_until_variable_binding__statement_in_block": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block"
                ]
            }
        ],
        "_dot_reference___expression_until_variable_binding__statement_in_block": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_variable_binding__statement_in_block"
            }
        ],
        "_dot_reference_contents___expression_until_variable_binding__statement_in_block": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";|(?=\\})",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_variable_binding__statement_in_block"
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_in_block"
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_variable_binding__statement_in_block": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_variable_binding__statement_in_block": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_variable_binding__statement_in_block": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_variable_binding__statement_in_block": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_in_block",
                    "_primary___expression_until_variable_binding__statement_in_block",
                    "expression_until_colon"
                ]
            }
        ],
        "_expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            }
        ],
        "_primary_parts___expression_until_end_of_statement__statement_top_level": [
            {
                "include": "_arrow_function_expression___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_class_expression___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_prefix_operators___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_unary_operators___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_primary___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_end_of_statement__statement_top_level"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            }
        ],
        "_new_target___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_end_of_statement__statement_top_level",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_primary___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_class_name_deep___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_function_expression___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_function_expression_name___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_end_of_statement__statement_top_level",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_class_expression_name___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_top_level"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_top_level",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_top_level",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement_top_level",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_end_of_statement__statement_top_level": [
            {
                "include": "_instanceof_keyword___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_binary_operators___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_dot_reference___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_square_bracket_reference___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_function_invocation___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_template_literal___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "_conditional_expression___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_secondary___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";",
                        "pop": true
                    },
                    {
                        "include": "_secondary_parts___expression_until_end_of_statement__statement_top_level"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "include": "_secondary_parts___expression_until_end_of_statement__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_class_name_shallow___expression_until_end_of_statement__statement_top_level"
                ]
            }
        ],
        "_binary_operators___expression_until_end_of_statement__statement_top_level": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level"
                ]
            }
        ],
        "_dot_reference___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_end_of_statement__statement_top_level"
            }
        ],
        "_dot_reference_contents___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_end_of_statement__statement_top_level"
                    }
                ]
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_end_of_statement__statement_top_level": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement_top_level",
                    "_primary___expression_until_end_of_statement__statement_top_level",
                    "expression_until_colon"
                ]
            }
        ],
        "_expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            }
        ],
        "_primary_parts___expression_until_variable_binding__statement_top_level": [
            {
                "include": "_arrow_function_expression___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_class_expression___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_prefix_operators___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_unary_operators___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_primary___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_variable_binding__statement_top_level"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_variable_binding__statement_top_level"
                    }
                ]
            }
        ],
        "_new_target___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_variable_binding__statement_top_level",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_primary___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_class_name_deep___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_variable_binding__statement_top_level": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_function_expression___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_function_expression_name___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_variable_binding__statement_top_level",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_class_expression_name___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement_top_level"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_top_level",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_top_level",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement_top_level",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_variable_binding__statement_top_level": [
            {
                "include": "_instanceof_keyword___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_binary_operators___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_dot_reference___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_square_bracket_reference___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_function_invocation___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_template_literal___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "_conditional_expression___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_secondary___expression_until_variable_binding__statement_top_level": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";",
                        "pop": true
                    },
                    {
                        "match": ",",
                        "set": "_variable_statement_want_binding__statement_top_level"
                    },
                    {
                        "include": "_secondary_parts___expression_until_variable_binding__statement_top_level"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_top_level"
            },
            {
                "include": "_secondary_parts___expression_until_variable_binding__statement_top_level"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_class_name_shallow___expression_until_variable_binding__statement_top_level"
                ]
            }
        ],
        "_binary_operators___expression_until_variable_binding__statement_top_level": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level"
                ]
            }
        ],
        "_dot_reference___expression_until_variable_binding__statement_top_level": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_variable_binding__statement_top_level"
            }
        ],
        "_dot_reference_contents___expression_until_variable_binding__statement_top_level": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_variable_binding__statement_top_level"
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement_top_level"
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_variable_binding__statement_top_level": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_variable_binding__statement_top_level": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_variable_binding__statement_top_level": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_variable_binding__statement_top_level": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_variable_binding__statement_top_level",
                    "_primary___expression_until_variable_binding__statement_top_level",
                    "expression_until_colon"
                ]
            }
        ],
        "_expression_until_end_of_statement__statement": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            }
        ],
        "_primary_parts___expression_until_end_of_statement__statement": [
            {
                "include": "_arrow_function_expression___expression_until_end_of_statement__statement"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_end_of_statement__statement"
            },
            {
                "include": "_class_expression___expression_until_end_of_statement__statement"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_end_of_statement__statement"
            },
            {
                "include": "_prefix_operators___expression_until_end_of_statement__statement"
            },
            {
                "include": "_unary_operators___expression_until_end_of_statement__statement"
            }
        ],
        "_primary___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_end_of_statement__statement"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_end_of_statement__statement": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_end_of_statement__statement"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_end_of_statement__statement"
                    }
                ]
            }
        ],
        "_new_target___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_end_of_statement__statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement"
            },
            {
                "include": "_primary___expression_until_end_of_statement__statement"
            }
        ],
        "_class_name_deep___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_end_of_statement__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_end_of_statement__statement": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_end_of_statement__statement": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_end_of_statement__statement"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_end_of_statement__statement"
            }
        ],
        "_function_expression___expression_until_end_of_statement__statement": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_end_of_statement__statement"
            }
        ],
        "_function_expression_name___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_end_of_statement__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_end_of_statement__statement",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_end_of_statement__statement": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_end_of_statement__statement"
            }
        ],
        "_class_expression_name___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_end_of_statement__statement"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_end_of_statement__statement": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_end_of_statement__statement",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_end_of_statement__statement": [
            {
                "include": "_instanceof_keyword___expression_until_end_of_statement__statement"
            },
            {
                "include": "_binary_operators___expression_until_end_of_statement__statement"
            },
            {
                "include": "_dot_reference___expression_until_end_of_statement__statement"
            },
            {
                "include": "_square_bracket_reference___expression_until_end_of_statement__statement"
            },
            {
                "include": "_function_invocation___expression_until_end_of_statement__statement"
            },
            {
                "include": "_template_literal___expression_until_end_of_statement__statement"
            },
            {
                "include": "_conditional_expression___expression_until_end_of_statement__statement"
            }
        ],
        "_secondary___expression_until_end_of_statement__statement": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";",
                        "pop": true
                    },
                    {
                        "include": "_secondary_parts___expression_until_end_of_statement__statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "include": "_secondary_parts___expression_until_end_of_statement__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_end_of_statement__statement": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_class_name_shallow___expression_until_end_of_statement__statement"
                ]
            }
        ],
        "_binary_operators___expression_until_end_of_statement__statement": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement"
                ]
            }
        ],
        "_dot_reference___expression_until_end_of_statement__statement": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_end_of_statement__statement"
            }
        ],
        "_dot_reference_contents___expression_until_end_of_statement__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_end_of_statement__statement"
                    }
                ]
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_end_of_statement__statement": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_end_of_statement__statement": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_end_of_statement__statement": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_end_of_statement__statement": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_end_of_statement__statement",
                    "_primary___expression_until_end_of_statement__statement",
                    "expression_until_colon"
                ]
            }
        ],
        "_expression_until_variable_binding__statement": [
            {
                "match": "{{otherwise}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            }
        ],
        "_primary_parts___expression_until_variable_binding__statement": [
            {
                "include": "_arrow_function_expression___expression_until_variable_binding__statement"
            },
            {
                "include": "parenthesized_expression"
            },
            {
                "include": "string_literal"
            },
            {
                "include": "template_literal"
            },
            {
                "include": "regular_expression_literal"
            },
            {
                "include": "numeric_literal"
            },
            {
                "include": "array_literal"
            },
            {
                "include": "object_literal"
            },
            {
                "include": "_function_expression___expression_until_variable_binding__statement"
            },
            {
                "include": "_class_expression___expression_until_variable_binding__statement"
            },
            {
                "include": "language_constant"
            },
            {
                "include": "language_variable"
            },
            {
                "include": "_new_keyword___expression_until_variable_binding__statement"
            },
            {
                "include": "_prefix_operators___expression_until_variable_binding__statement"
            },
            {
                "include": "_unary_operators___expression_until_variable_binding__statement"
            }
        ],
        "_primary___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_primary_or_block_statement___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary_or_block_statement___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "_primary_parts___expression_until_variable_binding__statement"
            },
            {
                "include": "reserved_word_reference"
            },
            {
                "include": "identifier_reference"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_new_keyword___expression_until_variable_binding__statement": [
            {
                "match": "{{b_before}}new{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "\\.",
                        "scope": "keyword.operator.js",
                        "set": "_new_target___expression_until_variable_binding__statement"
                    },
                    {
                        "include": "_class_name_shallow___expression_until_variable_binding__statement"
                    }
                ]
            }
        ],
        "_new_target___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_new_target___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}target{{b_after}}",
                "scope": "support.class.js",
                "pop": true
            },
            {
                "match": "{{b_before}}(?:t|ta|tar|targ|targe){{b_after}}",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "invalid.illegal.js",
                "pop": true
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_name_shallow___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_class_name_deep___expression_until_variable_binding__statement",
                    "expression_until_parenthesis"
                ]
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement"
            },
            {
                "include": "_primary___expression_until_variable_binding__statement"
            }
        ],
        "_class_name_deep___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "\\.",
                "scope": "support.class.js",
                "set": "_class_name_deep_dot_reference___expression_until_variable_binding__statement"
            },
            {
                "match": "\\[",
                "push": "expression_until_square_bracket"
            },
            {
                "match": "{{otherwise}}",
                "pop": true
            }
        ],
        "_class_name_deep_dot_reference___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_name_deep_dot_reference___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{ident}}",
                "scope": "support.class.js",
                "set": "_class_name_deep___expression_until_variable_binding__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_prefix_operators___expression_until_variable_binding__statement": [
            {
                "match": "(?<!-)--|(?<!\\+)\\+\\+",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "{{b_before}}(?:true|false|null|undefined|Infinity|NaN){{b_after}}",
                        "scope": "invalid.illegal.js",
                        "pop": true
                    },
                    {
                        "include": "language_variable"
                    },
                    {
                        "include": "reserved_word_reference"
                    },
                    {
                        "include": "identifier_reference_simple"
                    },
                    {
                        "include": "parenthesized_expression"
                    },
                    {
                        "include": "otherwise_invalid"
                    }
                ]
            }
        ],
        "_unary_operators___expression_until_variable_binding__statement": [
            {
                "match": "{{b_before}}yield(?:{{to_token}}\\*|{{b_after}})",
                "scope": "keyword.operator.js",
                "set": [
                    {
                        "match": "{{some_space}}"
                    },
                    {
                        "match": "(?=;)",
                        "pop": true
                    },
                    {
                        "match": "(?={{line_terminator}})",
                        "pop": true
                    },
                    {
                        "include": "_primary___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "!|(?<!\\+)\\+(?!\\+)|(?<!-)-(?!-)|{{b_before}}(?:typeof|void|delete|await){{b_after}}",
                "scope": "keyword.operator.js",
                "set": "_primary___expression_until_variable_binding__statement"
            },
            {
                "match": "~",
                "scope": "keyword.operator.bitwise.js",
                "set": "_primary___expression_until_variable_binding__statement"
            }
        ],
        "_function_expression___expression_until_variable_binding__statement": [
            {
                "match": "{{b_before}}(?:(async){{some_space}})?+(function)(?:(\\*)|{{b_after}})",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "storage.type.js",
                    "3": "keyword.operator.js"
                },
                "set": "_function_expression_name___expression_until_variable_binding__statement"
            }
        ],
        "_function_expression_name___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_name___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement"
            },
            {
                "match": "(?=\\()",
                "set": "_function_expression_parenthesis___expression_until_variable_binding__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_parenthesis___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_parenthesis___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\(",
                "set": [
                    "_function_expression_curly_bracket___expression_until_variable_binding__statement",
                    "parameter_binding_list"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_function_expression_curly_bracket___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_function_expression_curly_bracket___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "(?=\\{)",
                "set": "block_statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression___expression_until_variable_binding__statement": [
            {
                "match": "{{b_before}}class{{b_after}}",
                "scope": "storage.type.js",
                "set": "_class_expression_name___expression_until_variable_binding__statement"
            }
        ],
        "_class_expression_name___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_name___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement"
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket_or_extends___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{b_before}}extends{{b_after}}",
                "scope": "storage.modifier.js",
                "set": "_class_expression_inheritance___expression_until_variable_binding__statement"
            },
            {
                "match": "{{b_before}}(?:extend|exten|exte|ext|ex|e){{to_token}}{{b_after}}"
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_inheritance___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_inheritance___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "{{reserved_word}}",
                "scope": "invalid.illegal.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement"
            },
            {
                "match": "{{ident}}",
                "scope": "entity.name.function.js",
                "set": "_class_expression_curly_bracket___expression_until_variable_binding__statement"
            },
            {
                "match": "\\{",
                "scope": "invalid.illegal.js",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_class_expression_curly_bracket___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": "(?=;)",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_class_expression_curly_bracket___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": "(?=,)",
                "pop": true
            },
            {
                "match": "\\{",
                "set": "_class_block"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_arrow_function_expression___expression_until_variable_binding__statement": [
            {
                "match": "{{arrow_function_with_parenthesis}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement",
                    "_arrow_operator",
                    "parameter_binding_list"
                ]
            },
            {
                "match": "{{arrow_function_with_reserved_word}}",
                "captures": {
                    "1": "storage.modifier.js",
                    "2": "invalid.illegal.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement",
                    "_arrow_operator"
                ]
            },
            {
                "match": "{{arrow_function_with_ident}}",
                "captures": {
                    "1": "storage.modifier.js"
                },
                "set": [
                    "_primary_or_block_statement___expression_until_variable_binding__statement",
                    "_arrow_operator"
                ]
            }
        ],
        "_secondary_parts___expression_until_variable_binding__statement": [
            {
                "include": "_instanceof_keyword___expression_until_variable_binding__statement"
            },
            {
                "include": "_binary_operators___expression_until_variable_binding__statement"
            },
            {
                "include": "_dot_reference___expression_until_variable_binding__statement"
            },
            {
                "include": "_square_bracket_reference___expression_until_variable_binding__statement"
            },
            {
                "include": "_function_invocation___expression_until_variable_binding__statement"
            },
            {
                "include": "_template_literal___expression_until_variable_binding__statement"
            },
            {
                "include": "_conditional_expression___expression_until_variable_binding__statement"
            }
        ],
        "_secondary___expression_until_variable_binding__statement": [
            {
                "match": "^(?={{to_token}}{{statement_keyword_all}})",
                "pop": true
            },
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "{{non_token}}"
                    },
                    {
                        "match": ";",
                        "pop": true
                    },
                    {
                        "match": ",",
                        "set": "_variable_statement_want_binding__statement"
                    },
                    {
                        "include": "_secondary_parts___expression_until_variable_binding__statement"
                    },
                    {
                        "match": "{{otherwise}}",
                        "pop": true
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement"
            },
            {
                "include": "_secondary_parts___expression_until_variable_binding__statement"
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_instanceof_keyword___expression_until_variable_binding__statement": [
            {
                "match": "{{b_before}}instanceof{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_class_name_shallow___expression_until_variable_binding__statement"
                ]
            }
        ],
        "_binary_operators___expression_until_variable_binding__statement": [
            {
                "match": ">>>?+=?+|<<=?+|&=|\\^=|\\|=",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            },
            {
                "match": "\\*\\*|-=|\\+=|===?+|!==?+|<=|>=|&&|\\|\\||\\*=?+|/=|%=",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            },
            {
                "match": "%|\\*|/|-|\\+|=|<|>|{{b_before}}in{{b_after}}",
                "scope": "keyword.operator.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            },
            {
                "match": "&|\\^|~|\\|",
                "scope": "keyword.operator.bitwise.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            },
            {
                "match": ",",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement"
                ]
            }
        ],
        "_dot_reference___expression_until_variable_binding__statement": [
            {
                "match": "\\.",
                "set": "_dot_reference_contents___expression_until_variable_binding__statement"
            }
        ],
        "_dot_reference_contents___expression_until_variable_binding__statement": [
            {
                "match": "{{some_space}}"
            },
            {
                "match": ";",
                "pop": true
            },
            {
                "match": "{{line_terminator}}",
                "set": [
                    {
                        "match": "^(?={{to_token}}{{statement_keyword_all}})",
                        "pop": true
                    },
                    {
                        "include": "_dot_reference_contents___expression_until_variable_binding__statement"
                    }
                ]
            },
            {
                "match": ",",
                "set": "_variable_statement_want_binding__statement"
            },
            {
                "match": "{{b_before}}constructor{{b_after}}",
                "scope": "support.class.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}{{assignment_for_function}}",
                "scope": "entity.name.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:prototype|length|size|message|buffer|byteLength|byteOffset|EPSILON|MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|MAX_VALUE|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY|NaN|E|LN10|LOG10E|LOG2E|PI|SQRT1_2|SQRT2|BYTES_PER_ELEMENT){{b_after}}",
                "scope": "support.constant.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{b_before}}(?:create|ceil|cos|defineProperty|defineProperties|freeze|fromCharCode|fromCodePoint|chatAt|charCodeAt|codePointAt|concat|endsWith|includes|indexOf|lastIndexOf|localeCompare|match|normalize|repeat|replace|search|slice|splice|split|startsWith|trimStart|trimEnd|padStart|padEnd|repeat|substr|substring|toLocaleLowerCase|toLocaleUpperCase|toLowerCase|toUpperCase|trim|floor|getOwnPropertyDescriptor|getOwnPropertyDescriptors|getOwnPropertyNames|getOwnPropertySymbols|getPrototypeOf|is|isExtensible|isFrozen|isSealed|isArray|isView|keys|pow|parse|preventExtensions|seal|sin|sqrt|stringify|tan|acos|atan2|atan|asin|abs|exp|log|max|min|random|round|UTC|now|exec|test|toString|toSource|assign|hasOwnProperty|isPrototypeOf|propertyIsEnumerable|toLocaleString|valueOf|setPrototypeOf|values|entries|call|apply|bind|is|isInteger|isFinite|isNaN|isSafeInteger|parseFloat|parseInt|toExponential|toFixed|toPrecision|trunc|tanh|sinh|cosh|sign|log2|log10|log1p|imul|hypot|fround|expml|clz32|cbrt|atanh|asinh|acosh|getDate|getDay|getFullYear|getHours|getMilliseconds|getMinutes|getMonth|getSeconds|getTime|getTimezoneOffset|getUTCDate|getUTCDay|getUTCFullYear|getUTCHours|getUTCMilliseconds|getUTCMinutes|getUTCMonth|getUTCSeconds|setDate|setFullYear|setHours|setMilliseconds|setMinutes|setMonth|setSeconds|setTime|setUTCDate|setUTCFullYear|setUTCHours|setUTCMilliseconds|setUTCMinutes|setUTCMonth|setUTCSeconds|toDateString|toISOString|toJSON|toLocaleDateString|toLocaleTimeString|toTimeString|toUTCString|for|keyFor|from|copyWithin|every|fill|filter|find|findIndex|forEach|join|map|pop|push|shift|unshift|reduce|reduceRight|reverse|some|sort|set|subarray|clear|delete|get|has|add|construct|deleteProperty|getCanonicalLocales|next|return|throw|all|race|then|catch|finally|resolve|reject|getFloat32|setFloat32|getFloat64|setFloat64|getInt16|setInt16|getInt32|setInt32|getInt64|setInt64|getInt8|setInt8|getUint16|setUint16|getUint32|setUint32|getUint64|setUint64|getUint8|setUint8|assert|count|dir|dirxml|group|groupCollapsed|groupEnd|info|log|profile|profileEnd|table|time|timeEnd|trace|warn)(?={{to_token}}\\()",
                "scope": "support.function.js",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "match": "{{ident}}",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator"
                ]
            },
            {
                "include": "otherwise_invalid"
            }
        ],
        "_square_bracket_reference___expression_until_variable_binding__statement": [
            {
                "match": "\\[",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_optional_postfix_operator",
                    "expression_until_square_bracket"
                ]
            }
        ],
        "_function_invocation___expression_until_variable_binding__statement": [
            {
                "match": "\\(",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "expression_until_parenthesis_with_spread_anywhere"
                ]
            }
        ],
        "_template_literal___expression_until_variable_binding__statement": [
            {
                "match": "(?=`)",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "template_literal"
                ]
            }
        ],
        "_conditional_expression___expression_until_variable_binding__statement": [
            {
                "match": "\\?",
                "set": [
                    "_secondary___expression_until_variable_binding__statement",
                    "_primary___expression_until_variable_binding__statement",
                    "expression_until_colon"
                ]
            }
        ]
    }
}