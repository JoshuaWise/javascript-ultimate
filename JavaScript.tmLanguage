<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>comment</key>
    <string>JavaScript Ultimate. Sublime Text 2 package created by Joshua Wise. Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php).</string>
    <key>fileTypes</key>
    <array>
        <string>js</string>
        <string>htc</string>
        <string>jsx</string>
    </array>
    <key>name</key>
    <string>JavaScript</string>
    <key>scopeName</key>
    <string>source.js</string>
    <key>firstLineMatch</key>
    <string>^#!/usr/bin/env node</string>
    <key>foldingStartMarker</key>
    <string>^.*?(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])function(\s++[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+)?+\s*+\(.*+\n?</string>
    <key>foldingStopMarker</key>
    <string>^\s*+\}</string>
    <key>keyEquivalent</key>
    <string>^~J</string>
    <key>uuid</key>
    <string>f6b05d20-74dc-435a-a495-ff82a823c1de</string>

    <!-- CHECK REDUNDANCIES BEFORE EDITING -->
    <key>patterns</key>
    <array>
        <dict>
            <key>include</key>
            <string>#shebang</string>
        </dict>
    	<dict>
    		<key>include</key>
    		<string>#comments</string>
    	</dict>
    	<dict>
    		<key>include</key>
    		<string>#strings</string>
    	</dict>
    	<dict>
    		<key>include</key>
    		<string>#numbers</string>
    	</dict>
    	<dict>
    		<key>include</key>
    		<string>#label</string>
    	</dict>
    	<dict>
    		<key>include</key>
    		<string>#function-patterns</string>
    	</dict>
    	
    	
    	<!-- Implementation-Dependant Objects/Functions/Properties -->
    	<dict>
    		<key>include</key>
    		<string>#library</string>
    	</dict>
    	<!-- Built-In Objects/Functions/Properties -->
    	<dict>
    		<key>include</key>
    		<string>#native-library</string>
    	</dict>
    	
    	
    	<dict>
    		<key>include</key>
    		<string>#operators-keywords-constants</string>
    	</dict>
    	<dict>
            <key>include</key>
            <string>#expressions</string>
        </dict>
    	<dict>
    		<key>include</key>
    		<string>#punctuation</string>
    	</dict>
    </array><!-- patterns -->
    
    
    
    
    
    <key>repository</key>
    <dict>
    	
    	
    	
    	
    	
    	<!-- ##### Methods, Properties, Labels #####-->
        <key>label</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- funcName: function(...) -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+(?=\s*+:\s*+(\()?+\s*+function\s*+\()</string>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
                <!-- default: -->
                <dict>
                    <key>match</key>
                    <string>\s*+(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])default(?=\s*+\:)</string>
                    <key>name</key>
                    <string>keyword.control.js</string>
                </dict>
                <!-- label: -->
                <dict>
                    <key>match</key>
                    <string>^\s*+([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+)(?=\s*+\:\s*+($|//|(for|while|switch)\s*+\(|do\s*+(\{|$|//)))</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>entity.name.section.js</string>
                        </dict>
                    </dict>
                </dict>
                <!-- property: -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+(?=\s*+\:)</string>
                    <key>name</key>
                    <string>entity.other.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Blocks Inside Expressions #####-->
        <key>block</key>
        <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.js</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>meta.brace.curly.js</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>$self</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Function and Class Patterns #####-->
        <key>function-patterns</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- new ClassName | instanceof ClassName -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(new|instanceof)\s++([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+\s*+(\.)\s*+)*+([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+)</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>keyword.operator.js</string> <!-- REDUNDANCY at "Major Operators (single)" -->
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.period.js</string>
                        </dict>
                        <key>4</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.js</string>
                        </dict>
                    </dict>
                </dict>
                <!-- ClassName.prototype -->
                <dict>
                    <key>name</key>
                    <string>meta.class.js</string>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+)\s*+(\.)\s*+(prototype)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>support.class.js</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.period.js</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>support.constant.js</string>
                        </dict>
                    </dict>
                </dict>
                <!-- function FuncName(...) | get/set PropertyName(...)  -->
                <dict>
                    <key>name</key>
                    <string>meta.function.js</string>
                    <key>begin</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])((function)(\s++([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+))?+\s*+(\()|(get|set)\s++([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+)\s*+(\())</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>storage.type.js</string>
                        </dict>
                        <key>4</key>
                        <dict>
                            <key>name</key>
                            <string>entity.name.function.js</string>
                        </dict>
                        <key>5</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.js punctuation.definition.parameters.begin.js</string>
                        </dict>
                        <key>6</key>
                        <dict>
                            <key>name</key>
                            <string>storage.type.js</string>
                        </dict>
                        <key>7</key>
                        <dict>
                            <key>name</key>
                            <string>entity.name.property.js</string>
                        </dict>
                        <key>8</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.js punctuation.definition.parameters.begin.js</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>\)</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>meta.brace.round.js punctuation.definition.parameters.end.js</string>
                        </dict>
                    </dict>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>include</key>
                            <string>#comments</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>(?&lt;=\(|,|^|\*/)\s*+[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+\s*+(?=,|\)|$|//|/\*)</string>
                            <key>name</key>
                            <string>variable.parameter.function.js</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>,</string>
                            <key>name</key>
                            <string>meta.delimiter.parameter.comma.js</string>
                        </dict>
                    </array>
                </dict>
                <!-- funcName = function(...) -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+(?=\s*+=\s*+(\()?+\s*+function\s*+\()</string>
                    <key>name</key>
                    <string>entity.name.function.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Operators, Keywords, Constants #####-->
        <key>operators-keywords-constants</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Normal Property Accessors (anything.propertyName) -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;=\.)\s*+[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]*+</string>
                </dict>
                <!-- Booleans -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])true(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.language.boolean.true.js</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])false(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.language.boolean.false.js</string>
                </dict>
                <!-- Global Constants -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])null(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.language.null.js</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])undefined(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.language.undefined.js</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>Infinity|NaN)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.language.js</string>
                </dict>
                <!-- Built-In Variables -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>super|this|arguments)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>variable.language.js</string>
                </dict>
                <!-- Storage Declarations -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>c(?>lass|onst)|enum|function|var|let|get|set|interface)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>storage.type.js</string>
                </dict>
                <!-- Storage Modifiers -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>extends|implements|p(?>r(?>otected|ivate)|ublic)|static)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>storage.modifier.js</string>
                </dict>
                <!-- Control Flow Statements -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>yield|e(?>xport|lse)|await|break|c(?>atch|ontinue)|d(?>ebugger|o)|f(?>inally|or)|i(?>f|mport)|package|return|switch|t(?>hrow|ry)|while)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>keyword.control.js</string>
                </dict>
                <!-- Bitwise Operators (combination) -->
                <dict>
                    <key>match</key>
                    <string>(?>&gt;&gt;(?>&gt;(?>=)?|=)?|&lt;&lt;(?>=)?|&amp;=|\^=|\|=)</string>
                    <key>name</key>
                    <string>bitwise-operator.js</string>
                </dict>
                <!-- Major Operators (combination) -->
                <dict>
                    <key>match</key>
                    <string>(?>-(?>-|=)|\+(?>\+|=)|~~|==(?>=)?|!=(?>=)?|&lt;=|&gt;=|&amp;&amp;|\|\||\*=|/=|%=|\?:)</string>
                    <key>name</key>
                    <string>keyword.operator.js</string>
                </dict>
                <!-- Major Operators (single) -->
                <dict>
                    <key>match</key>
                    <string>(?>!|%|\*|/|-|\+|=|&lt;|&gt;)|(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>in(?>stanceof)?|of|new|delete|typeof|void|with)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>keyword.operator.js</string>
                </dict>
                <!-- Bitwise Operators (single) -->
                <dict>
                    <key>match</key>
                    <string>&amp;|\^|\||~</string>
                    <key>name</key>
                    <string>bitwise-operator.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Comments #####-->
        <key>comments</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Line Comments -->
                <dict>
                    <key>match</key>
                    <string>(//).*+$\n?</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.comment.js</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>comment.line.double-slash.js</string>
                </dict>
                <!-- Documentation Comments -->
                <dict>
                    <key>begin</key>
                    <string>/\*\*(?!/)</string>
                    <key>end</key>
                    <string>\*/</string>
                    <key>captures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.comment.js</string>
                        </dict>
                    </dict>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>match</key>
                            <string>^\s*+\*\s*+(@\S++)(?=\s)</string>
                            <key>captures</key>
                            <dict>
                                <key>1</key>
                                <dict>
                                    <key>name</key>
                                    <string>keyword.other.documentation.custom.js</string>
                                </dict>
                            </dict>
                        </dict>
                    </array>
                    <key>name</key>
                    <string>comment.block.documentation.js</string>
                </dict>
                <!-- Block Comments -->
                <dict>
                    <key>begin</key>
                    <string>/\*</string>
                    <key>end</key>
                    <string>\*/</string>
                    <key>captures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.comment.js</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>comment.block.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Node Shebang #####-->
        <key>shebang</key>
        <dict>
            <key>match</key>
            <string>^#!/usr/bin/env node\s*+(#.*+)?+$\n?</string>
            <key>name</key>
            <string>comment.line.shebang.js</string>
        </dict>
        
        
        
        
        
        <!-- ##### Expression Contexts (Case, Ternary Operator) #####-->
        <key>expressions</key>
        <dict>
            <key>begin</key>
            <string>\?|(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(case)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
            <key>beginCaptures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.control.js</string>
                </dict>
            </dict>
            <key>end</key>
            <string>:</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#comments</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#strings</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#numbers</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#block</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#function-patterns</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#library</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#native-library</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#operators-keywords-constants</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#punctuation</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Strings, Regular Expressions #####-->
        <key>strings</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Strings (Single Quotes) -->
                <dict>
                    <key>begin</key>
                    <string>(')(use strict(?='))?</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.js</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>comment.directive.js</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>'</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.js</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.quoted.single.js</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>match</key>
                            <string>\\([bfnrtv'"\\]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-3][0-7]{0,2}+|[4-7][0-7]?+)</string>
                            <key>name</key>
                            <string>constant.character.escape.js</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>(\\)\n</string>
                            <key>name</key>
                            <string>constant.character.escape.js</string>
                            <key>captures</key>
                            <dict>
                                <key>1</key>
                                <dict>
                                    <key>name</key>
                                    <string>linecontinuation.js</string>
                                </dict>
                            </dict>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>\\</string>
                            <key>name</key>
                            <string>invalid.illegal.js</string>
                        </dict>
                    </array>
                </dict>
                <!-- Strings (Double Quotes) -->
                <dict>
                    <key>begin</key>
                    <string>(")(use strict(?="))?</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.js</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>comment.directive.js</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>"</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>0</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.js</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.quoted.double.js</string>
                    <key>patterns</key>
                    <array>
                        <dict>
                            <key>match</key>
                            <string>\\([bfnrtv'"\\]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-3][0-7]{0,2}+|[4-7][0-7]?+)</string>
                            <key>name</key>
                            <string>constant.character.escape.js</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>(\\)\n</string>
                            <key>name</key>
                            <string>constant.character.escape.js</string>
                            <key>captures</key>
                            <dict>
                                <key>1</key>
                                <dict>
                                    <key>name</key>
                                    <string>linecontinuation.js</string>
                                </dict>
                            </dict>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>\\</string>
                            <key>name</key>
                            <string>invalid.illegal.js</string>
                        </dict>
                    </array>
                </dict>
                <!-- Regular Expressions -->
                <dict>
                    <key>begin</key>
                    <string>(?>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}\s.)\]])|(?&lt;=[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]in|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]delete|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]typeof|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]void|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]yield|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]case|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]return|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]throw|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]do|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]else|[^\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}]export|^in|^delete|^typeof|^void|^yield|^case|^return|^throw|^do|^else|^export))\s*+(/)(?!/|\*)</string>
                    <key>beginCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.begin.js</string>
                        </dict>
                    </dict>
                    <key>end</key>
                    <string>(/)((?![gim]*?(?'option'[gim])[gim]*?\k'option')[gim]{0,3})?+([\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}\\]++)?|(\n)</string>
                    <key>endCaptures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.js</string>
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>punctuation.definition.string.end.js</string>
                        </dict>
                        <key>4</key>
                        <dict>
                            <key>name</key>
                            <string>invalid.illegal.js</string>
                        </dict>
                        <key>5</key>
                        <dict>
                            <key>name</key>
                            <string>invalid.illegal.js</string>
                        </dict>
                    </dict>
                    <key>name</key>
                    <string>string.regexp.js</string>
                    <key>patterns</key>
                    <array>
                        <!-- Character Classes -->
                        <dict>
                            <key>begin</key>
                            <string>(\[\^?+)(-)?</string>
                            <key>beginCaptures</key>
                            <dict>
                                <key>1</key>
                                <dict>
                                    <key>name</key>
                                    <string>punctuation.definition.string.begin.js</string>
                                </dict>
                                <key>2</key>
                                <dict>
                                    <key>name</key>
                                    <string>string.regexp.characterclass.js</string>
                                </dict>
                            </dict>
                            <key>end</key>
                            <string>(-)?+(\])|(?=\n)</string>
                            <key>endCaptures</key>
                            <dict>
                                <key>1</key>
                                <dict>
                                    <key>name</key>
                                    <string>string.regexp.characterclass.js</string>
                                </dict>
                                <key>2</key>
                                <dict>
                                    <key>name</key>
                                    <string>punctuation.definition.string.end.js</string>
                                </dict>
                            </dict>
                            <key>name</key>
                            <string>string.regexp.characterclass.js</string>
                            <key>patterns</key>
                            <array>
                                <dict>
                                    <key>match</key>
                                    <string>\\c[0-9_]</string> <!-- "\c_" actually does work in tested browsers, but it's not in the ECMAScript spec -->
                                    <key>name</key>
                                    <string>invalid.illegal.js</string>
                                </dict>
                                <dict>
                                    <key>match</key>
                                    <string>-</string>
                                    <key>name</key>
                                    <string>regexp-operator.js</string>
                                </dict>
                                <dict>
                                    <key>match</key>
                                    <string>\\([bdDfnrsStvwW]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|c[A-Za-z]|[0-3][0-7]{0,2}+|[4-7][0-7]?+)</string>
                                    <key>name</key>
                                    <string>constant.character.escape.js regexp-operator.js</string>
                                </dict>
                                <dict>
                                    <key>match</key>
                                    <string>\\[^c\n]</string>
                                    <key>name</key>
                                    <string>constant.character.escape.js</string>
                                </dict>
                            </array>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>\\(?>[bBdDfnrsStvwW]|[1-9][0-9]*+|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|c[A-Za-z]|0[0-7]{0,2}+)</string>
                            <key>name</key>
                            <string>constant.character.escape.js regexp-operator.js</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>(?>\^|\$|\{[0-9]+(,[0-9]*)?\}|\||\(\?!|\(\?=|\(\?:|\?|\(|\)|\.|\*|\+)</string>
                            <key>name</key>
                            <string>regexp-operator.js</string>
                        </dict>
                        <dict>
                            <key>match</key>
                            <string>\\[^c\n]</string>
                            <key>name</key>
                            <string>constant.character.escape.js</string>
                        </dict>
                    </array>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Hex, Octal, Decimal Numbers #####-->
        <key>numbers</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Hex Numbers -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}.])(0(?>x|X)[0-9a-fA-F]++)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.numeric.hexadecimal.js</string>
                </dict>
                <!-- Octal Numbers -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}.])(0[0-7]++)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.numeric.octal.js</string>
                </dict>
                <!-- Decimal Numbers -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}.])([0-9]++\.?+[0-9]*+((?>e|E)[-+]?+[0-9]++)?|\.[0-9]++((?>e|E)[-+]?+[0-9]++)?+)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>constant.numeric.decimal.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Punctuation ##### -->
        <key>punctuation</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Semicolon -->
                <dict>
                    <key>match</key>
                    <string>\;</string>
                    <key>name</key>
                    <string>punctuation.terminator.statement.js</string>
                </dict>
                <!-- Comma -->
                <dict>
                    <key>match</key>
                    <string>,</string>
                    <key>name</key>
                    <string>meta.delimiter.comma.js</string>
                </dict>
                <!-- Period -->
                <dict>
                    <key>match</key>
                    <string>\.</string>
                    <key>name</key>
                    <string>meta.delimiter.period.js</string>
                </dict>
                <!-- Curly Brackets -->
                <dict>
                    <key>match</key>
                    <string>\{|\}</string>
                    <key>name</key>
                    <string>meta.brace.curly.js</string>
                </dict>
                <!-- Parenthesis -->
                <dict>
                    <key>match</key>
                    <string>\(|\)</string>
                    <key>name</key>
                    <string>meta.brace.round.js</string>
                </dict>
                <!-- Square Brackets -->
                <dict>
                    <key>match</key>
                    <string>\[|\]</string>
                    <key>name</key>
                    <string>meta.brace.square.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Native Library ##### -->
        <key>native-library</key>
        <dict>
            <key>patterns</key>
            <array>
                <!-- Common Developer Tools -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(console)\s*+(\.)\s*+(warn|info|log|error|exception|debug|dir|memory|timeEnd|time|trace|table|assert|Console|count|groupCollapsed|groupEnd|group|profileEnd|profile)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>captures</key>
                    <dict>
                        <key>1</key>
                        <dict>
                            <key>name</key>
                            <string>support.constant.js dev.js</string> <!-- REDUNDANCY below this dict -->
                        </dict>
                        <key>2</key>
                        <dict>
                            <key>name</key>
                            <string>meta.delimiter.method.period.js</string>
                        </dict>
                        <key>3</key>
                        <dict>
                            <key>name</key>
                            <string>support.function.js dev.js</string>
                        </dict>
                    </dict>
                </dict>
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])console(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.constant.js dev.js</string>
                </dict>
                <!-- Specification Global Classes -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>Object|F(?>unction|loat(?>32Array|64Array))|Boolean|Number|S(?>tring|yntaxError)|R(?>e(?>gExp|ferenceError)|angeError)|Array(?>Buffer)?|Int(?>8Array|16Array|32Array)|U(?>int(?>8(?>Array|ClampedArray)|16Array|32Array)|RIError)|Dat(?>aView|e)|E(?>rror|valError)|TypeError)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.class.js</string>
                </dict>
                <!-- Specification Global Singletons -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>Math|JSON)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.constant.js</string>
                </dict>
                <!-- Specification Global Functions -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>e(?>val|ncodeURI(?>Component)?)|is(?>Finite|NaN)|parse(?>Float|Int)|decodeURI(?>Component)?)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.function.js</string>
                </dict>
                <!-- Specification Class Methods -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>c(?>reate|eil|os)|definePropert(?>y|ies)|f(?>r(?>eeze|omCharCode)|loor)|get(?>OwnProperty(?>Descriptor|Names)|PrototypeOf)|is(?>Extensible|Frozen|Sealed|Array|View)|keys|p(?>ow|arse|reventExtensions)|s(?>eal|in|qrt|tringify)|tan|a(?>bs|cos|sin|tan(?>2)?)|exp|log|m(?>ax|in)|r(?>andom|ound)|UTC|now)(?=\s*+\()</string>
                    <key>name</key>
                    <string>support.function.js</string>
                </dict>
                <!-- Specification Instance Methods -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;=\.)\s*+(?>apply|bind|c(?>all|har(?>At|CodeAt)|oncat)|e(?>very|xec)|f(?>ilter|orEach)|get(?>Da(?>te|y)|F(?>ullYear|loat(?>32|64))|Hours|M(?>i(?>lliseconds|nutes)|onth)|Seconds|Time(?>zoneOffset)?|U(?>TC(?>Da(?>te|y)|FullYear|Hours|M(?>i(?>lliseconds|nutes)|onth)|Seconds)|int(?>8|16|32))|Int(?>8|16|32))?|hasOwnProperty|i(?>ndexOf|sPrototypeOf)|join|l(?>astIndexOf|ocaleCompare)|ma(?>p|tch)|p(?>op|ropertyIsEnumerable|ush)|re(?>duce(?>Right)?|place|verse)|s(?>e(?>arch|t(?>Date|F(?>ullYear|loat(?>32|64))|Hours|M(?>i(?>lliseconds|nutes)|onth)|Seconds|Time|U(?>TC(?>Date|FullYear|Hours|M(?>i(?>lliseconds|nutes)|onth)|Seconds)|int(?>8|16|32))|Int(?>8|16|32))?)|hift|lice|o(?>me|rt)|pli(?>ce|t)|ub(?>string|array))|t(?>est|o(?>DateString|Exponential|Fixed|ISOString|JSON|Lo(?>cale(?>DateString|LowerCase|String|TimeString|UpperCase)|werCase)|Precision|String|TimeString|U(?>TCString|pperCase))|rim)|unshift|valueOf)(?=\s*+\()</string>
                    <key>name</key>
                    <string>support.function.js</string>
                </dict>
                <!-- Specification Class Properties -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>M(?>AX_VALUE|IN_VALUE)|N(?>EGATIVE_INFINITY|aN)|P(?>OSITIVE_INFINITY|I)|E|L(?>N(?>10|2)|OG(?>10E|2E))|SQRT(?>1_2|2)|BYTES_PER_ELEMENT)(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.constant.js</string>
                </dict>
                <!-- Specification Instance Properties -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;=\.)\s*+(?>constructor|name|length|m(?>essage|ultiline)|global|ignoreCase|source|b(?>yte(?>Length|Offset)|uffer))(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.constant.js</string>
                </dict>
                <!-- Common Global Functions -->
                <dict>
                    <key>match</key>
                    <string>(?&lt;![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])(?>escape|unescape|set(?>Timeout|Interval)|clear(?>Timeout|Interval))(?![\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}_\x{200C}\x{200D}])</string>
                    <key>name</key>
                    <string>support.function.js</string>
                </dict>
            </array>
        </dict>
        
        
        
        
        
        <!-- ##### Library ##### -->
        <key>library</key>
        <dict>
            <key>patterns</key>
            <array>
<!-- !@#[custom-lib-goes-here]!@# -->
            </array>
        </dict>
        
        
        
        
        
    </dict><!-- repository -->
    
</dict>
</plist>